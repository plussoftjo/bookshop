{"version":3,"sources":["src/assets/logo2.png","src/assets/Stander/empty-product.png","src/assets/Stander/address.png","src/assets/logo.png","src/assets/Stander/avatar.png","src/stores/Categories/CategoriesType.js","src/stores/Categories/CategoriesReducers.js","src/stores/Checkout/CheckoutType.js","src/stores/Checkout/CheckoutReducers.js","src/stores/User/UserType.js","src/stores/User/UserReducers.js","src/stores/Settings/SettingsType.js","src/stores/Settings/SettingsReducers.js","src/stores/Items/ItemsType.js","src/stores/Items/ItemsReducers.js","src/stores/rootReducer.js","src/stores/store.js","src/services/FontsLoader.js","src/translations/index.js","src/services/LocaleLoader.js","src/constants/Animations.js","src/constants/env.js","src/services/apis.js","src/containers/Main/Home/Components/Header.js","src/containers/Main/Home/Components/Categories.js","src/containers/Main/Home/Components/TopItems.js","src/containers/Main/Home/Components/Items.js","src/containers/Main/Home/Components/Offers.js","src/containers/Main/Home/Components/NewItems.js","src/stores/Categories/CategoriesActions.js","src/stores/Checkout/CheckoutAction.js","src/stores/User/UserActions.js","src/components/ItemDialog/Favourite.js","src/components/Snake/index.js","src/components/ItemDialog/index.js","src/components/Loader/index.js","src/containers/Main/Home/index.js","src/containers/Main/Category/Components/Header.js","src/containers/Main/Category/Components/Items.js","src/containers/Main/Category/index.js","src/containers/Main/Items/Components/Header.js","src/containers/Main/Items/Components/Items.js","src/containers/Main/Items/index.js","src/containers/Main/ShowAll/Components/Header.js","src/containers/Main/ShowAll/Components/Items.js","src/containers/Main/ShowAll/index.js","src/containers/Main/Search/Components/Header.js","src/containers/Main/Search/Components/SearchForItems.js","src/containers/Main/Search/Components/NothingFound.js","src/containers/Main/Search/index.js","src/containers/Settings/SettingsMain/Components/Header.js","src/containers/Settings/SettingsMain/Components/UserDetails.js","src/containers/Settings/SettingsMain/Components/SettingsList.js","src/containers/Settings/SettingsMain/index.js","src/containers/Settings/MyOrders/Components/Header.js","src/containers/Settings/MyOrders/index.js","src/containers/Settings/OrderDetails/Components/Header.js","src/containers/Settings/OrderDetails/index.js","src/containers/Settings/Addresses/Components/Header.js","src/containers/Settings/Addresses/Components/GetLocation.js","src/containers/Settings/Addresses/Components/AddAddress.js","src/containers/Settings/Addresses/Components/AddressBox.js","src/containers/Settings/Addresses/index.js","src/containers/Settings/Favourite/Components/Header.js","src/containers/Settings/Favourite/index.js","src/containers/Settings/Language/Components/Header.js","src/containers/Settings/Language/index.js","src/containers/GoodsBasket/Components/Header.js","src/containers/GoodsBasket/Components/Spiner.js","src/containers/GoodsBasket/Components/DetailsBox.js","src/containers/GoodsBasket/index.js","src/components/DrawerContent/UserDetails.js","src/components/DrawerContent/SettingsList.js","src/components/DrawerContent/index.js","src/navigation/DrawerNavigation.js","src/navigation/MainNavigation.js","src/containers/Categories/index.js","src/containers/Checkout/Basket/Components/Header.js","src/containers/Checkout/Basket/Components/Items.js","src/containers/Checkout/Basket/Components/Code.js","src/containers/Checkout/Basket/Components/Fee.js","src/containers/Checkout/Basket/index.js","src/containers/Checkout/Address/Components/Header.js","src/containers/Checkout/Address/Components/AddressBox.js","src/containers/Checkout/Address/Components/GetLocation.js","src/containers/Checkout/Address/Components/AddAddress.js","src/containers/Checkout/Address/index.js","src/containers/Checkout/Payment/Components/Header.js","src/containers/Checkout/Payment/Components/PaymentsInfo.js","src/containers/Checkout/Payment/Components/DeliveryTime.js","src/containers/Checkout/Payment/index.js","src/containers/Checkout/Done/Components/Header.js","src/containers/Checkout/Done/index.js","src/navigation/CheckoutNavigation.js","src/navigation/SettingsNavigation.js","src/navigation/BottomTapNavigation.js","src/containers/Loading/index.js","src/stores/Items/ItemsActions.js","src/stores/Settings/SettingsActions.js","src/containers/Auth/Components/Header.js","src/containers/Auth/Components/Login.js","src/containers/Auth/Components/Register.js","src/containers/Auth/index.js","src/Router.js","src/Root.js","App.js","assets/fonts/SpaceMono-Regular.ttf","src/assets/dummy/tomat.png","src/assets/dummy/leef.png","src/assets/Stander/sh.png","src/assets/Stander/basket-min.jpg","src/assets/Stander/cashondelivery.png","src/assets/Stander/online.png","src/assets/Stander/xs2.jpg"],"names":["module","exports","CategoriesType","SET_CATEGORIES","SET_CATEGORY","intintalState","categories","category","reducer","state","action","type","payload","CheckoutType","SET_ITEMS","SET_ADDRESS","SET_PAYMENT","SET_TIME","SET_NOTE","SET_END_CHECKOUT","items","address","payment","time","note","UserType","SET_ADDRESSES","SET_USER","SET_ORDERS","SET_LOGOUT","SET_ORDER","SET_FAVOURITE","addresses","user","auth","orders","order","favourite","SettingsType","SET_DELIVERY_TIMES","SET_LOCALE","delivery_times","locale","lang","rtl","ItemsType","SET_ITEMS_LIST","SET_TOP_ITEMS_LIST","SET_OFFERS","SET_NEW_ITEMS","itemsList","topItemsList","offers","new_items","rootReducer","combineReducers","CategoriesReducers","checkout","CheckoutReducers","UserReducers","settings","SettingsReducers","ItemsReducers","store","createStore","FontsLoader","a","async","Font","Ionicons","font","require","InstallFonts","translationGetters","ar","en","translate","memoize","key","config","i18n","t","JSON","stringify","setI18nConfig","isRTL","AsyncStorage","setItem","I18nManager","forceRTL","translations","SetFirstTime","changeLanguage","Updates","LocaleLoader","getItem","Animations","screenOptions","headerShown","gestureEnabled","gestureDirection","cardStyleInterpolator","CardStyleInterpolators","forFadeFromBottomAndroid","transitionSpec","open","animation","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","close","duration","easing","Easing","linear","screenOptionsHome","env","server","apis","main","index","onSuccess","onError","axios","get","then","res","catch","err","search","searchText","post","data","withCategoriesId","id","addAddress","token","headers","Authorization","response","login","register","navigation","theme","useTheme","size","Dimensions","React","useState","heightAnimation","useRef","Animated","Value","current","useEffect","timing","toValue","useNativeDriver","start","View","style","height","width","styles","container","opacity","x2","y2","offset","stopColor","stopOpacity","rx","ry","cx","fill","card","flexDirection","justifyContent","alignItems","Entypo","onPress","openDrawer","name","color","position","right","top","alignContent","Image","source","resizeMode","paddingVertical","paddingBottom","marginTop","flex","TouchableOpacity","navigate","borderRadius","backgroundColor","borderWidth","borderColor","paddingHorizontal","padding","StyleSheet","create","left","pressCategory","CategoryCard","uri","image","cache","textAlign","title","ScrollView","contentContainerStyle","horizontal","showsHorizontalScrollIndicator","map","trg","marginHorizontal","onPressItem","ItemCard","item","marginRight","fontWeight","price","Platform","OS","appearance","status","textDecorationLine","_discount","discount","_fee","toFixed","setCategory","setItems","setAddresses","setUser","setOrders","setLogout","setFavourite","connect","dispatch","props","isFav","setIsFav","_has","forEach","checkFavourite","_favouriteList","push","console","log","removeFromFavourite","AntDesign","addToFavourite","bottom","borderTopColor","borderTopWidth","setShowItem","qty","setQty","setNote","opacityAnimation","showBackIcon","setShowBackIcon","closeItem","setTimeout","showSnake","setShowSnake","useFocusEffect","useCallback","onBackPress","BackHandler","addEventListener","removeEventListener","KeyboardAvoidingView","behavior","showsVerticalScrollIndicator","scrollEventThrottle","onScroll","event","nativeEvent","contentOffset","y","zIndex","transform","scale","_price","discount_price","maxWidth","description","_qty","placeholder","value","onChangeText","val","label","stock","_items","_item","evaProps","disabled","Snake","showItem","addListener","e","preventDefault","Header","Offers","NewItems","TopItems","img","goBack","itemShow","paddingTop","searchInput","setSearchInput","showSearchForItems","setShowSearchForItems","synced","setSynced","changeText","accessoryRight","onBlur","SearchForItems","length","NothingFound","phone","point","icon","box","marginLeft","paddingLeft","borderBottomColor","borderBottomWidth","UserDetails","SettingsList","removeItem","setOrder","ListItem","List","total","created_at","slice","order_items","getStatus","setLocation","errorMsg","setErrorMsg","Location","location","get_location","load","setLoad","user_id","city","area","latitude","longitude","setData","borderTopRightRadius","borderTopLeftRadius","marginBottom","GetLocation","_addresses","_handleAddAddress","Loader","ListView","bold","marginVertical","showAddAddress","setShowAddAddress","AddressBox","setPayment","inx","setInx","checked","_x","Spiner","DetailsBox","DrawerContentScrollView","Drawer","createDrawerNavigator","DrawerNavigation","Navigator","initialRouteName","drawerContent","Screen","component","Home","Stack","createStackNavigator","MainNavigation","headerMode","Category","Items","ShowAll","Search","MyOrders","OrderDetails","Addresses","Favourite","Language","GoodsBasket","removeItems","_total","_fear","_setItems","Code","Fee","setAddressPath","_setCheckoutAddress","setCheckoutAddress","addressPath","paymentPath","setPaymentPath","_setTime","setTime","date_lang","Date","date","setDate","selectedTime","setSelectedTime","onSelect","nextDate","setEndCheckout","_note","_setNote","_item_fear","DeliveryTime","multiline","textStyle","minHeight","changeNote","_data","addresses_id","orders_items","_orders_locale","Basket","Address","Payment","Done","SettingsMain","Tab","createBottomTabNavigator","BottomTapNavigation","route","tabBarIcon","iconName","focused","Feather","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","Categories","CheckoutNavigation","SettingsNavigation","setCategories","setItemsList","setTopItemsList","setDeliveryTimes","setOffers","setLocale","setNewItems","checkLang","_locale","parse","CheckUser","callHttpAuth","_tok","_categories","_topItems","top_items","_deliverTime","deliverTime","_offers","offers_items","_new_items","ImageBackground","password","keyboardType","secureTextEntry","loginSuccess","loginFailed","changeScreen","role_id","registerSuccess","registerFailed","screen","setScreen","show","snakeOptions","setSnakeOptions","s","Register","NavigationContainer","Loading","BottomNavigation","Auth","App","isLoadingComplete","setLoadingComplete","SplashScreen","skipLoadingScreen","icons","EvaIconsPack","eva","StatusBar","barStyle","Router"],"mappings":"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","file":"static/js/app.48c577f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.9fb2bf9a.png\";","module.exports = __webpack_public_path__ + \"static/media/empty-product.f0f59ffe.png\";","module.exports = __webpack_public_path__ + \"static/media/address.f9a1aaeb.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b24db870.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.98d79ab0.png\";"," let CategoriesType = {\n    SET_CATEGORIES:'SET_CATEGORIES',\n    SET_CATEGORY:\"SET_CATEGORY\"\n}\n\nexport default CategoriesType","import CategoriesType from './CategoriesType'\n\nconst intintalState = {\n    categories:[],\n    category:{}\n}\n\n\nconst reducer = (state = intintalState,action) => {\n    switch (action.type) {\n        case CategoriesType.SET_CATEGORIES:\n            return { ...state, categories: action.payload };\n        case CategoriesType.SET_CATEGORY:\n            return {...state,category:action.payload}\n        default:\n            return state\n    }\n}\n\nexport default reducer"," let CheckoutType = {\n   SET_ITEMS: \"SET_ITEMS\",\n   SET_ADDRESS: \"SET_ADDRESS\",\n   SET_PAYMENT: \"SET_PAYMENT\",\n   SET_TIME: \"SET_TIME\",\n   SET_NOTE: \"SET_NOTE\",\n   SET_END_CHECKOUT: \"SET_END_CHECKOUT\",\n };\n\nexport default CheckoutType;","import CheckoutType from \"./CheckoutType\";\n\nconst intintalState = {\n  items: [],\n  address: 0,\n  payment: 'Cash On Delivery\"',\n  time: \"\",\n  note:''\n};\n\n\nconst reducer = (state = intintalState,action) => {\n    switch (action.type) {\n            case CheckoutType.SET_ITEMS:\n        return { ...state, items: action.payload };\n        case CheckoutType.SET_ADDRESS:\n            return {...state,address:action.payload};\n        case CheckoutType.SET_PAYMENT:\n            return {...state,payment:action.payload};\n        case CheckoutType.SET_TIME:\n            return {...state,time:action.payload}\n        case CheckoutType.SET_NOTE:\n            return {...state,note:action.payload}\n        case CheckoutType.SET_END_CHECKOUT:\n            return {items:[],address:0,payment:'Cash On Delivery',time:'',note:''}\n        default:\n            return state\n    }\n}\n\nexport default reducer","let UserType = {\r\n  SET_ADDRESSES: \"SET_ADDRESSES\",\r\n  SET_USER:\"SET_USER\",\r\n  SET_ORDERS:\"SET_ORDERS\",\r\n  SET_LOGOUT:\"SET_LOGOUT\",\r\n  SET_ORDER:\"SET_ORDER\",\r\n  SET_FAVOURITE:\"SET_FAVOURITE\"\r\n};\r\n\r\nexport default UserType;\r\n","import UserType from './UserType'\r\n\r\n\r\nconst intintalState = {\r\n  addresses: [],\r\n  user:{},\r\n  auth:false,\r\n  orders:[],\r\n  order:{},\r\n  favourite:[]\r\n};\r\n\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case UserType.SET_ADDRESSES:\r\n      return { ...state, addresses: action.payload };\r\n    case UserType.SET_USER:\r\n      return {...state,user:action.payload,auth:true}\r\n    case UserType.SET_ORDERS:\r\n      return {...state,orders:action.payload}\r\n    case UserType.SET_LOGOUT:\r\n      return {addresses:[],user:{},auth:false,orders:[],order:{},favourite:[]}\r\n    case UserType.SET_ORDER:\r\n      return {...state,order:action.payload}\r\n    case UserType.SET_FAVOURITE:\r\n      return {...state,favourite:action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","\r\n\r\nlet SettingsType = {\r\n    SET_DELIVERY_TIMES:\"SET_DELIVERY_TIMES\",\r\n    SET_LOCALE:\"SET_LOCALE\"\r\n}\r\n\r\nexport default SettingsType;","\r\nimport SettingsType from './SettingsType'\r\n\r\nconst intintalState = {\r\n  delivery_times:[],\r\n  locale:{\r\n    lang:'en',\r\n    rtl:false\r\n  }\r\n};\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case SettingsType.SET_DELIVERY_TIMES:\r\n      return { ...state, delivery_times: action.payload };\r\n    case SettingsType.SET_LOCALE:\r\n      return {...state,locale:action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","\r\nlet ItemsType = {\r\n    SET_ITEMS_LIST:\"SET_LIST_ITEMS\",\r\n    SET_TOP_ITEMS_LIST:\"SET_TOP_ITEMS_LIST\",\r\n    SET_OFFERS:\"SET_OFFERS\",\r\n    SET_NEW_ITEMS:\"SET_NEW_ITEMS\"\r\n}\r\n\r\n\r\nexport default ItemsType;","\r\nimport ItemsType from './ItemsType'\r\n\r\nconst intintalState = {\r\n  itemsList: [],\r\n  topItemsList:[],\r\n  offers:[],\r\n  new_items:[]\r\n};\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case ItemsType.SET_ITEMS_LIST:\r\n        return {...state,itemsList:action.payload}\r\n    case ItemsType.SET_TOP_ITEMS_LIST:\r\n        return {...state,topItemsList:action.payload}\r\n    case ItemsType.SET_OFFERS:\r\n      return {...state,offers:action.payload}\r\n    case ItemsType.SET_NEW_ITEMS:\r\n      return {...state,new_items:action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {combineReducers} from 'redux'\nimport CategoriesReducers from './Categories/CategoriesReducers'\nimport CheckoutReducers from './Checkout/CheckoutReducers'\nimport UserReducers from './User/UserReducers'\nimport SettingsReducers from './Settings/SettingsReducers'\nimport ItemsReducers from './Items/ItemsReducers'\nconst rootReducer = combineReducers({\n  categories: CategoriesReducers,\n  checkout: CheckoutReducers,\n  user: UserReducers,\n  settings: SettingsReducers,\n  items:ItemsReducers\n});\n\nexport default rootReducer;","import {createStore} from 'redux'\nimport rootReducer from './rootReducer'\n\n\nconst store = createStore(rootReducer)\n\nexport default store;","/** FontLoader */\r\n\r\nimport React from 'react';\r\n\r\nimport * as Font from \"expo-font\"; // Expo Fonts\r\nimport { Ionicons } from \"@expo/vector-icons\"; // Vector Icons Register\r\n\r\nlet FontsLoader = async () => {\r\n    async function InstallFonts() {\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          \"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n        });\r\n    }\r\n\r\n    // Call Function\r\n    InstallFonts();\r\n}\r\n\r\nexport default FontsLoader;","import i18n from \"i18n-js\";\nimport memoize from \"lodash.memoize\"; \nimport {I18nManager} from 'react-native';\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Updates from \"expo-updates\";\n\nconst translationGetters = {\n  ar: () => require('./ar.json'),\n  en: () => require('./en.json'),\n};\n\nexport const translate = memoize(\n  (key, config) => i18n.t(key, config),\n  (key, config) => (config ? key + JSON.stringify(config) : key)\n);\n\nexport const setI18nConfig = async(lang,isRTL) => {\n  await AsyncStorage.setItem(\"@blueberry_locale\", lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n  return \"Done\";\n};\n\nexport const SetFirstTime = async (lang, isRTL) => {\n  await AsyncStorage.setItem(\"@blueberry_locale\", lang);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n  return 'Done';\n};\n\nexport const changeLanguage = async(lang,isRTL) => {\n  await AsyncStorage.setItem(\"@blueberry_locale\", lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n  Updates.reloadAsync();\n}","/** LocaleLoader */\r\n\r\nimport React from 'react';\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport { setI18nConfig, SetFirstTime } from '../translations';\r\n\r\nasync function LocaleLoader() {\r\n        /* Load Locale and translation from storage  */\r\n        const locale = await AsyncStorage.getItem(\"@blueberry_locale\");\r\n        // Check If the first time is load\r\n        if (!locale) {\r\n            // Set it to english if the first time\r\n            SetFirstTime(\"en\", false);\r\n        } else {\r\n            if (locale == \"en\") {\r\n                await SetFirstTime(\"en\", false);\r\n            } else if (locale == \"ar\") {\r\n               await setI18nConfig(\"ar\", true);\r\n            }\r\n        }\r\n\r\n        return 'Done';\r\n}\r\n\r\nexport default LocaleLoader;","import { Easing } from \"react-native\";\r\nimport { CardStyleInterpolators} from \"@react-navigation/stack\";\r\n\r\nlet Animations = {\r\n  screenOptions: {\r\n    headerShown: false,\r\n    gestureEnabled: true,\r\n    gestureDirection: \"horizontal\",\r\n    cardStyleInterpolator: CardStyleInterpolators.forFadeFromBottomAndroid,\r\n    transitionSpec: {\r\n      open: {\r\n        animation: \"spring\",\r\n        config: {\r\n          stiffness: 1000,\r\n          damping: 300,\r\n          mass: 3,\r\n          overshootClamping: false,\r\n          restDisplacementThreshold: 0.01,\r\n          restSpeedThreshold: 0.01,\r\n        },\r\n      },\r\n      close: {\r\n        animation: \"timing\",\r\n        config: {\r\n          duration: 100,\r\n          easing: Easing.linear,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  screenOptionsHome:{\r\n    headerShown: false,\r\n    gestureEnabled: false,\r\n    gestureDirection: \"horizontal\",\r\n    cardStyleInterpolator: CardStyleInterpolators.forFadeFromBottomAndroid,\r\n    transitionSpec: {\r\n      open: {\r\n        animation: \"spring\",\r\n        config: {\r\n          stiffness: 1000,\r\n          damping: 300,\r\n          mass: 3,\r\n          overshootClamping: false,\r\n          restDisplacementThreshold: 0.01,\r\n          restSpeedThreshold: 0.01,\r\n        },\r\n      },\r\n      close: {\r\n        animation: \"timing\",\r\n        config: {\r\n          duration: 100,\r\n          easing: Easing.linear,\r\n        },\r\n      },\r\n    },\r\n  }\r\n};\r\n\r\nexport default Animations;","// Envs\r\nlet env = {\r\n  server: \"http://35.238.84.41/\",\r\n};\r\n\r\nexport default env;\r\n","\r\nimport axios from 'axios'\r\nimport {env} from '../constants'\r\n\r\nlet apis = {\r\n  main: {\r\n    index(onSuccess, onError) {\r\n      axios\r\n        .get(env.server + \"api/main/index\")\r\n        .then((res) => onSuccess(res))\r\n        .catch((err) => {\r\n          onError(err);\r\n        });\r\n    },\r\n    search(searchText,onSuccess,onError) {\r\n      axios\r\n        .post(env.server + \"api/search\", { searchText: searchText })\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    }\r\n  },\r\n  items: {\r\n    withCategoriesId(id, onSuccess, onError) {\r\n      axios\r\n        .get(env.server + \"api/items/withCategoriesId/\" + id)\r\n        .then((res) => {\r\n          onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          onError(err);\r\n        });\r\n    },\r\n  },\r\n  user: {\r\n    addAddress(data, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/user/add_address\", data)\r\n        .then((res) => onSuccess(res))\r\n        .catch((err) => onError(err));\r\n    },\r\n    auth(token, onSuccess, onError) {\r\n      axios\r\n        .get(env.server + \"api/user/auth\", {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        })\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err.response));\r\n    },\r\n    login(data, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/user/login\", data)\r\n        .then((res) => {\r\n          onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          onError(err);\r\n        });\r\n    },\r\n    register(data, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/user/register\", data)\r\n        .then((res) => {\r\n          onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          onError(err);\r\n        });\r\n    },\r\n  },\r\n  order:{\r\n    store(data,onSuccess,onError) {\r\n      axios\r\n        .post(env.server + \"api/order/store\", data)\r\n        .then((res) => {\r\n          onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          onError(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n\r\nexport default apis;","import React from 'react'\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions,Animated,TouchableOpacity,Image } from \"react-native\";\r\nimport {Layout,Text,Input,Icon,useTheme} from '@ui-kitten/components'\r\nimport Svg, {\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({navigation,locale,translate}) => {\r\n  let theme = useTheme();\r\n    let size = Dimensions.get(\"window\");\r\n    let [searchInput,setSearchInput] = React.useState('');\r\n    let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n    let InstallAnimation = () => {\r\n        Animated.timing(heightAnimation, {\r\n          toValue: 1,\r\n          duration: 1000,\r\n          useNativeDriver:true\r\n        }).start();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        InstallAnimation();// install Animation\r\n    },[]);\r\n\r\n    return (\r\n      <View style={{ height: 320, width: size.width }}>\r\n        <Animated.View\r\n          style={{ ...styles.container, opacity: heightAnimation }}\r\n        >\r\n          <Svg height={320} width={size.width}>\r\n            <Defs>\r\n              <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n                <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n                <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n                <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n                <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n              </LinearGradient>\r\n            </Defs>\r\n            <Ellipse rx={size.width} ry={320} cx={70} fill=\"url(#grad)\" />\r\n          </Svg>\r\n          <View style={styles.card}>\r\n            <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\r\n            <Entypo\r\n              onPress={() => {\r\n                navigation.openDrawer();\r\n              }}\r\n              name=\"list\"\r\n              size={32}\r\n              color=\"white\"\r\n            />\r\n            <View style={{position:'absolute',right:0,top:0,width:'100%',justifyContent:'center',alignContent:'center',alignItems:'center'}}>\r\n              <Image source={require('../../../../assets/logo2.png')} style={{width:50,height:50}} resizeMode=\"contain\" />\r\n            </View>\r\n           \r\n            </View>\r\n            \r\n            \r\n            <View style={{ paddingVertical: 20,paddingBottom:15, width: \"80%\" }}>\r\n              <Text category=\"h3\" style={{ color: \"white\" }}>\r\n                {translate(\"main.header.top_title\", locale.lang)}\r\n              </Text>\r\n              <Text category=\"s1\" style={{ color: \"white\", marginTop: 0 }}>\r\n                {translate(\"main.header.second_title\", locale.lang)}\r\n              </Text>\r\n              <View style={{flexDirection:'row',justifyContent:'space-between'}}>\r\n                <View style={{flex:1}}></View>\r\n                <View style={{flex:1}}>\r\n                <TouchableOpacity onPress={() => {\r\n                navigation.navigate(\"GoodsBasket\");\r\n                  }} style={{width:'100%',justifyContent:'center'}}>\r\n                      <View style={{flexDirection:'row',alignItems:'center',borderRadius:10,backgroundColor:\"white\",borderWidth:0.5,borderColor:\"#7e7e7e\",paddingVertical:2,paddingHorizontal:5}}>\r\n                        <Icon name=\"inbox\" fill={theme['color-success-500']} style={{width:26,height:26}} />\r\n                        <View style={{width:5}}></View>\r\n                          <Text category=\"s1\">{translate('goods_basket.header',locale.lang)}</Text>\r\n                      </View>\r\n                </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={{ width: \"70%\", marginTop: 0 }}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"Search\");\r\n                }}\r\n                style={{\r\n                  borderRadius: 50,\r\n                  backgroundColor: \"rgba(0,0,0,0.1)\",\r\n                  borderColor: \"white\",\r\n                  borderWidth: 1,\r\n                  padding: 10,\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Icon\r\n                  name=\"search\"\r\n                  style={{ width: 22, height: 22 }}\r\n                  fill=\"white\"\r\n                />\r\n                <View style={{ width: 10 }}></View>\r\n                <Text category=\"s1\" style={{ color: \"white\" }}>\r\n                  {translate(\"main.header.search\", locale.lang)}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        position:'relative'\r\n    },\r\n    card:{\r\n        position:'absolute',\r\n        left:0,\r\n        top:0,\r\n        width:'100%',\r\n        padding:10,\r\n        paddingVertical:30\r\n    }\r\n})","import React from 'react'\r\n\r\n/** Components */\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({navigation,categories,pressCategory}) => {\r\n    let CategoryCard = ({ category }) => (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          pressCategory(category);\r\n        }}\r\n        style={styles.card}\r\n      >\r\n        <Image\r\n          source={{\r\n            uri: env.server + \"storage/\" + category.image,\r\n            cache: \"default\",\r\n          }}\r\n          style={{ width: \"100%\", height: 50 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <Text category=\"s2\" style={{ textAlign: \"center\", marginTop: 10 }}>\r\n          {category.title}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n    return (\r\n      <View style={{ marginTop: 0 }}>\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexDirection: \"row\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n          horizontal={true}\r\n          showsHorizontalScrollIndicator={false}\r\n        >\r\n          {categories.map((trg, index) => (\r\n            <CategoryCard category={trg} key={index} />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    padding:5,\r\n    backgroundColor:'white',\r\n    borderRadius:5,\r\n    marginHorizontal:5,\r\n    width:110,\r\n    paddingHorizontal:15\r\n  }\r\n});","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,useTheme,Button} from '@ui-kitten/components'\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ items, onPressItem ,title,translate,lang}) => {\r\n  let theme = useTheme();\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: 10,\r\n        backgroundColor: \"#fcfcfc\",\r\n        borderColor: \"#f6f6f6\",\r\n        borderWidth: 1,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Image\r\n        source={{\r\n          uri: env.server + \"storage/\" + item.image,\r\n          cache: \"default\",\r\n        }}\r\n        style={{ width: 120, height: 100, borderRadius: 10 }}\r\n        resizeMode=\"stretch\"\r\n      />\r\n      <View style={{ padding: 5 }}>\r\n        <Text category=\"s1\" style={{ fontWeight: \"bold\" }}>\r\n          {item.title}\r\n        </Text>\r\n        <Text\r\n          category=\"s1\"\r\n          style={{\r\n            color: theme[\"text-success-color\"],\r\n            textAlign: \"right\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View>\r\n      <View\r\n        style={{\r\n          paddingHorizontal: 10,\r\n          marginTop: 15,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Text category={\"h4\"}>{title}</Text>\r\n      </View>\r\n      <ScrollView\r\n        horizontal={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ padding: 10 }}\r\n      >\r\n        {items.map((trg, index) => (\r\n          <ItemCard key={index} item={trg} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,Platform,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,useTheme,Button} from '@ui-kitten/components'\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ navigation, items, onPressItem,translate,lang}) => {\r\n  let theme = useTheme();\r\n\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n        width: \"100%\",\r\n        height: 130,\r\n        backgroundColor: theme[\"color-success-100\"],\r\n        borderColor: theme[\"color-success-300\"],\r\n        borderWidth: 0.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n        <Text category=\"h5\">{item.title}</Text>\r\n        <View style={{ height: 20 }}></View>\r\n        <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <Image\r\n          source={{\r\n            uri: env.server + \"storage/\" + item.image,\r\n            cache: \"default\",\r\n          }}\r\n          style={{ height: 130, width: \"100%\" }}\r\n          resizeMode={\"center\"}\r\n        />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View style={{ padding: 10, marginTop: 15 }}>\r\n      <View\r\n        style={{\r\n          marginTop: 15,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Text category={\"h4\"}>{translate('products',lang)}</Text>\r\n        <Button\r\n          appearance=\"ghost\"\r\n          status=\"basic\"\r\n          onPress={() => {\r\n            navigation.navigate(\"ShowAll\");\r\n          }}\r\n        >\r\n          {translate('show_all',lang)}\r\n        </Button>\r\n      </View>\r\n      <View style={{ marginTop: 15 }}></View>\r\n      {items.map((trg, index) => (\r\n        <ItemCard item={trg} key={index} />\r\n      ))}\r\n    </View>\r\n  );\r\n};","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,useTheme,Button} from '@ui-kitten/components'\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ items, onPressItem ,title,translate,lang}) => {\r\n\r\n    let price =(item)=>{\r\n        let _price = 0;\r\n        let _discount = item.discount * 0.01\r\n        let _fee = item.price * _discount\r\n        _price = item.price - _fee;\r\n        _price = _price.toFixed(2)\r\n        return _price;\r\n    }\r\n  let theme = useTheme();\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: 10,\r\n        backgroundColor: \"#fcfcfc\",\r\n        borderColor: \"#f6f6f6\",\r\n        borderWidth: 1,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Image\r\n        source={{\r\n          uri: env.server + \"storage/\" + item.image,\r\n          cache: \"default\",\r\n        }}\r\n        style={{ width: 120, height: 100, borderRadius: 10 }}\r\n        resizeMode=\"stretch\"\r\n      />\r\n      <View style={{ padding: 5 }}>\r\n        <Text category=\"s1\" style={{ fontWeight: \"bold\" }}>\r\n          {item.title}\r\n        </Text>\r\n        <Text\r\n          category=\"s1\"\r\n          style={{\r\n            color: theme[\"text-danger-color\"],\r\n            textAlign: \"right\",\r\n            fontWeight: \"bold\",\r\n            textDecorationLine:'line-through'\r\n          }}\r\n        >\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n        <Text\r\n          category=\"s1\"\r\n          style={{\r\n            color: theme[\"text-success-color\"],\r\n            textAlign: \"right\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {price(item)}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View>\r\n      <View\r\n        style={{\r\n          paddingHorizontal: 10,\r\n          marginTop: 15,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Text category={\"h4\"}>{title}</Text>\r\n      </View>\r\n      <ScrollView\r\n        horizontal={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ padding: 10 }}\r\n      >\r\n        {items.map((trg, index) => (\r\n          <ItemCard key={index} item={trg} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,useTheme,Button} from '@ui-kitten/components'\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ items, onPressItem ,title,translate,lang}) => {\r\n  let theme = useTheme();\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: 10,\r\n        backgroundColor: \"#fcfcfc\",\r\n        borderColor: \"#f6f6f6\",\r\n        borderWidth: 1,\r\n        marginRight: 5,\r\n      }}\r\n    >\r\n      <Image\r\n        source={{\r\n          uri: env.server + \"storage/\" + item.image,\r\n          cache: \"default\",\r\n        }}\r\n        style={{ width: 120, height: 100, borderRadius: 10 }}\r\n        resizeMode=\"stretch\"\r\n      />\r\n      <View style={{ padding: 5 }}>\r\n        <Text category=\"s1\" style={{ fontWeight: \"bold\" }}>\r\n          {item.title}\r\n        </Text>\r\n        <Text\r\n          category=\"s1\"\r\n          style={{\r\n            color: theme[\"text-success-color\"],\r\n            textAlign: \"right\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View>\r\n      <View\r\n        style={{\r\n          paddingHorizontal: 10,\r\n          marginTop: 15,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Text category={\"h4\"}>{title}</Text>\r\n      </View>\r\n      <ScrollView\r\n        horizontal={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ padding: 10 }}\r\n      >\r\n        {items.map((trg, index) => (\r\n          <ItemCard key={index} item={trg} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};","import CategoriesType from './CategoriesType'\n\nexport const setCategories = item => {\n    return {\n        type:CategoriesType.SET_CATEGORIES,\n        payload:item\n    }\n}\n\nexport const setCategory = item => {\n    return {\n        type:CategoriesType.SET_CATEGORY,\n        payload:item\n    }\n}","import CheckoutType from './CheckoutType'\n\nexport const setItems = item => {\n    return {\n        type:CheckoutType.SET_ITEMS,\n        payload:item\n    }\n}\n\nexport const setCheckoutAddress = item => {\n    return {\n        type:CheckoutType.SET_ADDRESS,\n        payload:item\n    }\n}\n\nexport const setPayment = item => {\n    return {\n        type:CheckoutType.SET_PAYMENT,\n        payload:item\n    }\n}\n\nexport const setTime = item => {\n    return {\n        type:CheckoutType.SET_TIME,\n        payload:item\n    }\n}\n\nexport const setNote = (item) => {\n  return {\n    type: CheckoutType.SET_NOTE,\n    payload: item,\n  };\n};\n\nexport const setEndCheckout = () => {\n    return {\n        type:CheckoutType.SET_END_CHECKOUT\n    }\n}","import UserType from './UserType'\r\n\r\n\r\nexport const setAddresses = (item) => {\r\n  return {\r\n    type: UserType.SET_ADDRESSES,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const setUser = (item) => {\r\n  return {\r\n    type:UserType.SET_USER,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setOrders = item => {\r\n  return {\r\n    type:UserType.SET_ORDERS,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setLogout = () => {\r\n  return {\r\n    type:UserType.SET_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const setOrder = (item) =>{\r\n  return {\r\n    type:UserType.SET_ORDER,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setFavourite = (item) => {\r\n  return {\r\n    type:UserType.SET_FAVOURITE,\r\n    payload:item\r\n  }\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Layout,Text,Button} from '@ui-kitten/components'\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setFavourite} from '../../stores'\r\nlet Favourite = (props) => {\r\n    let {favourite} = props.user;\r\n    \r\n     let [isFav,setIsFav] = React.useState(false);\r\n\r\n\r\n    let checkFavourite = () => {\r\n        // Check if has favourite\r\n        let _has = false;\r\n        favourite.forEach((trg,index) => {\r\n            if(trg.id == props.item.id) {\r\n                _has = true;\r\n            }\r\n        })\r\n\r\n        setIsFav(_has)\r\n    }\r\n\r\n     let addToFavourite = async() => {\r\n         let _favouriteList = [];\r\n         _favouriteList.push(props.item)\r\n        favourite.forEach((trg,index) => {\r\n            _favouriteList.push(trg);\r\n        });\r\n\r\n        // Set Favourite\r\n        props.setFavourite(_favouriteList);\r\n        setIsFav(true);\r\n\r\n        // Set to Async Storage\r\n        try {\r\n            await AsyncStorage.setItem('@blueberry_favourite',JSON.stringify(_favouriteList));\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n     }\r\n\r\n     let removeFromFavourite = async() => {\r\n       let _favouriteList = [];\r\n       favourite.forEach((trg, index) => {\r\n         if (trg.id !== props.item) {\r\n           _favouriteList.push(trg);\r\n         }\r\n       });\r\n\r\n       props.setFavourite(_favouriteList);\r\n       setIsFav(false);\r\n\r\n       // Set to Async Storage\r\n       try {\r\n         await AsyncStorage.setItem(\r\n           \"@blueberry_favourite\",\r\n           JSON.stringify(_favouriteList)\r\n         );\r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n     }\r\n\r\n\r\n     React.useEffect(() => {\r\n         checkFavourite(); // Check Favourite\r\n     },[])\r\n\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        {isFav == true ? (\r\n          <Button\r\n            status=\"basic\"\r\n            style={{ backgroundColor: \"black\" }}\r\n            onPress={() => {\r\n              removeFromFavourite();\r\n            }}\r\n          >\r\n            <AntDesign name=\"heart\" size={18} color=\"pink\" />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            status=\"basic\"\r\n            style={{ backgroundColor: \"black\" }}\r\n            onPress={() => {\r\n              addToFavourite();\r\n            }}\r\n          >\r\n            <AntDesign name=\"hearto\" size={18} color=\"white\" />\r\n          </Button>\r\n        )}\r\n      </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   setFavourite:item => dispatch(setFavourite(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourite);","import React from 'react'\r\n\r\nimport {View,Dimensions,Animated} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\n\r\nexport default ({status,title}) => {\r\n\r\n    let heightAnimation = React.useState(new Animated.Value(0))[0];\r\n\r\n    React.useState(() => {\r\n        Animated.timing(heightAnimation,{\r\n            toValue:50,\r\n            duration:500,\r\n            useNativeDriver:false\r\n        }).start();\r\n\r\n        return ()=>{\r\n            Animated.timing(heightAnimation, {\r\n              toValue: 0,\r\n              duration: 500,\r\n              useNativeDriver: false,\r\n            }).start();\r\n        }\r\n    },[]);\r\n\r\n    let theme = useTheme();\r\n    let width = Dimensions.get('screen').width\r\n    let _getStatus = () => {\r\n        switch (status) {\r\n            case 'success':\r\n                return {\r\n                    border:theme['color-succes-700'],\r\n                    background:theme['color-succes-500']\r\n                }\r\n\r\n            case 'danger':\r\n                return {\r\n                    border:theme['color-danger-700'],\r\n                    background:theme['color-danger-500']\r\n                }\r\n            default:\r\n              return {\r\n                border: theme[\"color-succes-700\"],\r\n                background: theme[\"color-succes-500\"],\r\n              };\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          left: 0,\r\n          width: width,\r\n          height: heightAnimation,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            padding: 15,\r\n            backgroundColor: status == 'success'?theme['color-success-500']:theme['color-danger-500'],\r\n            borderTopColor:  status == 'success'?theme['color-success-700']:theme['color-danger-700'],\r\n            borderTopWidth: 2,\r\n            width: width,\r\n          }}\r\n        >\r\n          <Text category=\"h6\" style={{ color: \"white\", width: \"100%\",textAlign:'left' }}>\r\n            {title}\r\n          </Text>\r\n        </View>\r\n      </Animated.View>\r\n    );\r\n}","import React from \"react\";\r\n\r\n/** Components */\r\nimport {\r\n  View,\r\n  Animated,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  BackHandler\r\n} from \"react-native\";\r\nimport { Layout, Text, useTheme, Button, Input } from \"@ui-kitten/components\";\r\n\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nimport Favourite from './Favourite'\r\n\r\nimport {env} from '../../constants'\r\nimport {setItems} from '../../stores'\r\n\r\nimport Snake from '../Snake'\r\n\r\nimport {translate} from '../../translations'\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport {connect} from 'react-redux'\r\n\r\nlet ItemDialog = ({ setShowItem, item, setItems,checkout,locale }) => {\r\n\r\n  let [qty,setQty] = React.useState(1);\r\n  let [note,setNote] = React.useState(\"\");\r\n\r\n  let {lang,rtl} = locale\r\n\r\n  let theme = useTheme();\r\n  let height = Dimensions.get(\"window\").height;\r\n  let width = Dimensions.get(\"window\").width;\r\n  let heightAnimation = React.useState(new Animated.Value(0))[0];\r\n  let opacityAnimation = React.useState(new Animated.Value(0))[0];\r\n  let [showBackIcon, setShowBackIcon] = React.useState(false);\r\n  React.useEffect(() => {\r\n    console.log(height)\r\n    Animated.timing(heightAnimation, {\r\n      toValue: height / 2.6,\r\n      duration: 500,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    Animated.timing(opacityAnimation, {\r\n      toValue: 1,\r\n      duration: 500,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    setShowBackIcon(true);\r\n  }, []);\r\n\r\n  let OnClickBackButton = () => {\r\n    closeItem();\r\n\r\n  };\r\n\r\n\r\n  let closeItem = () => {\r\n    setShowBackIcon(false);\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 0,\r\n      duration: 500,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    \r\n    Animated.timing(opacityAnimation, {\r\n      toValue: 0,\r\n      duration: 500,\r\n      useNativeDriver: false,\r\n    }).start();\r\n    setTimeout(() => {\r\n      setShowItem(false);\r\n    }, 500);\r\n  }\r\n\r\n\r\n  let discount_price =(item)=>{\r\n    let _price = 0;\r\n    let _discount = item.discount * 0.01\r\n    let _fee = item.price * _discount\r\n    _price = item.price - _fee;\r\n    _price = _price * qty;\r\n    _price = _price.toFixed(2)\r\n    return _price;\r\n}\r\n\r\n  let [showSnake,setShowSnake] = React.useState(false);\r\n\r\n\r\n  let _add_item_to_basket = () => {\r\n    setShowSnake(true);\r\n    let _items = [];\r\n    let _item = {...item,qty:qty.toFixed(2),note:note}\r\n    _items.push(_item);\r\n    checkout.items.forEach((trg,index) => {\r\n      _items.push(trg);\r\n    });\r\n\r\n    setItems(_items);\r\n\r\n\r\n    setTimeout(() => {\r\n      setShowSnake(false)\r\n      closeItem();\r\n    },1000)\r\n    \r\n  }\r\n\r\n  \r\n  let price  = () => {\r\n    let _price = 0;\r\n    _price = item.price * qty;\r\n\r\n    return _price.toFixed(2);\r\n  }\r\n\r\n  let _onScroll = (event) => {\r\n    let y = event.nativeEvent.contentOffset.y;\r\n    if(y == -5) {\r\n      closeItem();\r\n    }\r\n  }\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const onBackPress = () => {\r\n        closeItem();\r\n      };\r\n\r\n      BackHandler.addEventListener('hardwareBackPress', onBackPress);\r\n\r\n      return () =>\r\n        BackHandler.removeEventListener('hardwareBackPress', onBackPress);\r\n    }, [])\r\n  );\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n      style={{\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <ScrollView\r\n        showsVerticalScrollIndicator={false}\r\n        scrollEventThrottle={16}\r\n        onScroll={_onScroll}\r\n      >\r\n        <View style={{ width: \"100%\", height: height / 2.6 }}>\r\n          <Animated.View\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              width: \"100%\",\r\n              height: heightAnimation,\r\n            }}\r\n          >\r\n            {showBackIcon && (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  OnClickBackButton();\r\n                }}\r\n                style={{ position: \"absolute\", left: 15, top: 20, zIndex: 101 }}\r\n              >\r\n                <AntDesign name={rtl ? 'arrowright':'arrowleft'} size={34} color=\"white\" />\r\n              </TouchableOpacity>\r\n            )}\r\n\r\n            <Animated.View\r\n              style={{\r\n                height: heightAnimation,\r\n                width: \"100%\",\r\n                backgroundColor: \"#2e86\",\r\n              }}\r\n            >\r\n              <Animated.Image\r\n                source={{\r\n                  uri: env.server + \"storage/\" + item.image,\r\n                  cache: \"default\",\r\n                }}\r\n                style={{ height: heightAnimation, width: \"100%\" }}\r\n                resizeMode={\"contain\"}\r\n              />\r\n            </Animated.View>\r\n          </Animated.View>\r\n        </View>\r\n\r\n        <Animated.View\r\n          style={{\r\n            height: height - 250,\r\n            // opacity: opacityAnimation,\r\n            backgroundColor: \"white\",\r\n            padding: 15,\r\n            transform: [{ scale: opacityAnimation }],\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          {item.discount  == 0 &&\r\n          <View style={{ position: \"absolute\", right: 0, top: 15 }}>\r\n            <Text category=\"h3\" style={{ color: theme[\"text-success-color\"] }}>\r\n              {price()}\r\n              {translate(\"jod\", lang)}\r\n            </Text>\r\n          </View>\r\n          }\r\n          {item.discount !== 0 &&\r\n          <View style={{ position: \"absolute\", right: 0, top: 15 }}>\r\n            <Text category=\"h6\" style={{ color: theme[\"text-danger-color\"],textDecorationLine:'line-through' }}>\r\n              {item.price}\r\n              {translate(\"jod\", lang)}\r\n            </Text>\r\n            <Text category=\"h4\" style={{ color: theme[\"text-success-color\"] }}>\r\n              {discount_price(item)}\r\n              {translate(\"jod\", lang)}\r\n            </Text>\r\n          </View>\r\n          }\r\n          <Text category=\"h3\" style={{textAlign:'left'}}>{item.title}</Text>\r\n          <Text\r\n            category=\"s1\"\r\n            style={{\r\n              marginTop: 15,\r\n              color: theme[\"text-hint-color\"],\r\n              maxWidth: \"95%\",\r\n              textAlign:'left'\r\n            }}\r\n          >\r\n            {item.description}\r\n          </Text>\r\n          <View\r\n            style={{\r\n              marginTop: 35,\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <View style={{ marginHorizontal: 15 }}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                    let _qty = qty;\r\n                    // if(_qty <= 0.40) {\r\n                    //   _qty = _qty + 0.10;\r\n                    // }else {\r\n                    //   _qty = _qty + 0.5;\r\n                    // }\r\n                    if(item.type == 0) {\r\n                      _qty = _qty + 0.50\r\n\r\n                    }else {\r\n                      _qty = _qty + 1;\r\n                    }\r\n                    setQty(_qty);\r\n                  \r\n                }}\r\n              >\r\n                <Text category=\"h3\" style={{color:theme['text-success-color']}}>+</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View>\r\n              <Text category=\"h2\" style={{ color: theme[\"text-hint-color\"] }}>\r\n                {item.type == 0 ?qty.toFixed(2) + 'KG':qty}\r\n              </Text>\r\n            </View>\r\n            <View style={{ marginHorizontal: 15 }}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                    let _qty = qty;\r\n                    if(_qty !== 0.50) {\r\n                      // if(_qty <= 0.50) {\r\n                      //   if(_qty == 0.10000000000000003) {\r\n                      //     _qty = 0;\r\n                      //   }else {\r\n                      //     _qty = _qty - 0.10;\r\n                      //     _qty.toFixed(2);\r\n                      //   }\r\n                        \r\n                      // }else {\r\n                      //   _qty = _qty - 0.50\r\n                      //   _qty.toFixed(2);\r\n                      // }\r\n                      if(item.type == 0) {\r\n                        _qty = _qty - 0.50;\r\n                      }else {\r\n                        _qty = _qty - 1;\r\n                      }\r\n                    }\r\n                    setQty(_qty);\r\n                }}\r\n              >\r\n                <Text category=\"h3\" style={{color:theme['text-danger-color']}}>-</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n          </View>\r\n          <View style={{ marginTop: 15 }}>\r\n            <Input placeholder={translate('note',lang)} value={note} onChangeText={(val) => setNote(val)} textAlign={rtl ? 'right':'left'} label={translate('add_note',lang)} />\r\n          </View>\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: 52,\r\n              left: 0,\r\n              width: \"100%\",\r\n              zIndex: 103,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                paddingHorizontal: 15,\r\n              }}\r\n            >\r\n              <View style={{ flex: 3 }}>\r\n                {item.stock ?\r\n                <Button\r\n                status=\"basic\"\r\n                style={{ backgroundColor: \"black\" }}\r\n                onPress={_add_item_to_basket}\r\n              >\r\n                {(evaProps) => (\r\n                  <Text\r\n                    {...evaProps}\r\n                    style={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    {translate(\"add_to_cart\",lang)}\r\n                  </Text>\r\n                )}\r\n              </Button>:\r\n              <Button\r\n                  status=\"danger\"\r\n                  disabled={true}\r\n                >\r\n                  {(evaProps) => (\r\n                    <Text\r\n                      {...evaProps}\r\n                      style={{ color: \"white\", fontWeight: \"bold\" }}\r\n                    >\r\n                      {translate(\"out_of_stock\",lang)}\r\n                    </Text>\r\n                  )}\r\n                </Button>\r\n              }\r\n              </View>\r\n              <View style={{ width: 10 }}></View>\r\n              <Favourite item={item} />\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n      </ScrollView>\r\n      {showSnake && <Snake status={\"success\"} title={translate('success_add_to_cart',lang)} />}\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    checkout:state.checkout,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setItems:item => dispatch(setItems(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemDialog);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Layout,Text,Spinner} from '@ui-kitten/components'\r\n\r\nexport default () => {\r\n    return (\r\n        <View style={{position:'absolute',left:0,top:0,width:'100%',height:'100%',justifyContent:'center',alignContent:'center',alignItems:'center'}}>\r\n            <Spinner />\r\n        </View>\r\n    )\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,StyleSheet,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,Icon,useTheme} from '@ui-kitten/components'\r\n\r\n// -------- Local Components -------- //\r\nimport {Header,Categories,TopItems,Items,Offers,NewItems} from './Components'\r\n\r\nimport {ItemDialog,Loader} from '../../../components'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setCategory} from '../../../stores'\r\n\r\n// Translate\r\nimport {translate} from '../../../translations'\r\n\r\nlet Home = (props) => {\r\n\r\n  let theme = useTheme();\r\n\r\n  let {lang,rtl} = props.locale;\r\n\r\n  let [showItem,setShowItem] = React.useState(false)\r\n\r\n  let {itemsList,topItemsList,offers,new_items} = props.items;\r\n  let {categories} = props.categories\r\n\r\n\r\n  let [item,setItem] = React.useState({}); // Selected Item When Press Item;\r\n\r\n\r\n  let onPressItem = (item) => {\r\n    setItem(item);\r\n    setShowItem(true);\r\n  };\r\n\r\n\r\n  let pressCategory = (category) => {\r\n    props.setCategory(category);\r\n    props.navigation.navigate('Category');\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    \r\n    props.navigation.addListener('beforeRemove',(e) => {\r\n      e.preventDefault();\r\n    });\r\n\r\n  });\r\n\r\n    return (\r\n      <Layout style={styles.container}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} locale={props.locale} translate={translate}></Header>\r\n          <Categories\r\n            categories={categories}\r\n            pressCategory={pressCategory}\r\n            navigation={props.navigation}\r\n          />\r\n          <Offers items={offers} onPressItem={onPressItem} title={translate('main.offers',lang)} translate={translate} lang={lang} />\r\n          <NewItems items={new_items} onPressItem={onPressItem} title={translate('new_items',lang)} translate={translate} lang={lang} />\r\n          <TopItems items={topItemsList} onPressItem={onPressItem} title={translate('main.top_items',lang)} translate={translate} lang={lang} />\r\n          <Items\r\n           translate={translate}\r\n           lang={lang}\r\n            items={itemsList}\r\n            onPressItem={onPressItem}\r\n            navigation={props.navigation}\r\n          />\r\n        </ScrollView>\r\n        {showItem && (\r\n          <ItemDialog\r\n            style={{ width: \"100%\" }}\r\n            setShowItem={setShowItem}\r\n            item={item}\r\n          />\r\n        )}\r\n          {/* <TouchableOpacity onPress={() => {\r\n          props.navigation.navigate(\"GoodsBasket\");\r\n        }} style={{position:'absolute',bottom:10,right:10}}>\r\n            <View style={{flexDirection:'row',alignItems:'center',borderRadius:10,backgroundColor:\"white\",borderWidth:0.5,borderColor:\"#7e7e7e\",paddingVertical:2,paddingHorizontal:5}}>\r\n              <Icon name=\"inbox\" fill={theme['color-success-500']} style={{width:26,height:26}} />\r\n              <View style={{width:5}}></View>\r\n      <Text category=\"s1\">{translate('goods_basket.header',lang)}</Text>\r\n            </View>\r\n        </TouchableOpacity> */}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items:state.items,\r\n    categories:state.categories,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCategory: (item) => dispatch(setCategory(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Image } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport {env} from '../../../../constants'\r\nexport default ({navigation,title,img}) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n        <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\r\n          <Entypo onPress={() => {navigation.goBack()}} name=\"arrow-long-left\" size={32} color=\"white\" />\r\n            <View style={{position:'absolute',right:0,top:0}}>\r\n              <Image source={require('../../../../assets/logo2.png')} style={{width:50,height:50}} resizeMode=\"contain\" />\r\n            </View>\r\n        </View>\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, Image, Platform, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ setShowItem, items, onPressItem,translate,lang }) => {\r\n  let theme = useTheme();\r\n\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n       onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n        width: \"100%\",\r\n        height: 130,\r\n        backgroundColor: theme[\"color-success-100\"],\r\n        borderColor: theme[\"color-success-300\"],\r\n        borderWidth: 0.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n        <Text category=\"h5\">{item.title}</Text>\r\n        <View style={{ height: 20 }}></View>\r\n        <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <Image\r\n          source={{ uri: env.server + \"storage/\" + item.image }}\r\n          style={{ height: 130, width: \"100%\" }}\r\n          resizeMode={\"center\"}\r\n        />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View style={{ padding: 10, marginTop: 15 }}>\r\n      <Text category=\"h4\">{translate(\"products\", lang)}</Text>\r\n      <View style={{ marginTop: 15 }}></View>\r\n      {items.map((trg, index) => (\r\n        <ItemCard key={index} item={trg} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nimport {Header,Items} from './Components'\r\n\r\n// Global components\r\nimport {ItemDialog} from '../../../components'\r\nimport {translate} from '../../../translations'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {apis} from '../../../services'\r\n\r\nlet Category = (props) => {\r\n\r\n\r\n  let [items,setItems] = React.useState([])\r\n  let {lang,rtl} = props.locale\r\n\r\n  let getItems = () => {\r\n    apis.items.withCategoriesId(props.categories.category.id,(res) => {\r\n      setItems(res);\r\n    },(err) => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n  let [item,setItem] = React.useState({});\r\n\r\n  let onPressItem = (item) => {\r\n    setItem(item);\r\n    setShowItem(true);\r\n  };\r\n\r\n\r\n  React.useEffect(() => {\r\n    // Get Items \r\n    getItems();\r\n  },[])\r\n\r\n    let [itemShow,setShowItem] = React.useState(false)\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} title={props.categories.category.title} img={props.categories.category.image} />\r\n          <Items\r\n            lang={lang}\r\n            translate={translate}\r\n            onPressItem={onPressItem}\r\n            items={items}\r\n            setShowItem={setShowItem}\r\n          />\r\n        </ScrollView>\r\n        {itemShow && <ItemDialog setShowItem={setShowItem} item={item} />}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories:state.categories,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({navigation}) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo onPress={() => {navigation.goBack()}} name=\"arrow-long-left\" size={32} color=\"white\" />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              Items\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, Image, Platform, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\r\n\r\nexport default ({ setShowItem }) => {\r\n  let theme = useTheme();\r\n\r\n  let ItemCard = ({ image }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        setShowItem(true);\r\n      }}\r\n      style={{\r\n        borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n        width: \"100%\",\r\n        height: 130,\r\n        backgroundColor: theme[\"color-success-100\"],\r\n        borderColor: theme[\"color-success-300\"],\r\n        borderWidth: 0.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n        <Text category=\"h5\">Tomate</Text>\r\n        <View style={{ height: 20 }}></View>\r\n        <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n          16JOD\r\n        </Text>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <Image\r\n          source={image}\r\n          style={{ height: 130, width: \"100%\" }}\r\n          resizeMode={\"center\"}\r\n        />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View style={{ padding: 10, marginTop: 15 }}>\r\n      <Text category=\"h4\">Products</Text>\r\n      <View style={{ marginTop: 15 }}></View>\r\n      <ItemCard image={require(\"../../../../assets/dummy/tomat.png\")} />\r\n      <ItemCard image={require(\"../../../../assets/dummy/leef.png\")} />\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nimport {Header,Items} from './Components'\r\n\r\n// Global components\r\nimport {ItemDialog} from '../../../components'\r\n\r\nexport default (props) => {\r\n\r\n    let [itemShow,setShowItem] = React.useState(false)\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} />\r\n          <Items setShowItem={setShowItem} />\r\n        </ScrollView>\r\n        {itemShow && <ItemDialog setShowItem={setShowItem} />}\r\n      </Layout>\r\n    );\r\n}","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { translate } from \"../../../../translations\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, Image, Platform, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\r\n\r\nimport {env} from '../../../../constants'\r\n\r\nexport default ({ onPressItem, items,translate,lang }) => {\r\n  let theme = useTheme();\r\n\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n        width: \"100%\",\r\n        height: 130,\r\n        backgroundColor: theme[\"color-success-100\"],\r\n        borderColor: theme[\"color-success-300\"],\r\n        borderWidth: 0.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n        <Text category=\"h5\">{item.title}</Text>\r\n        <View style={{ height: 20 }}></View>\r\n        <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <Image\r\n          source={{\r\n            uri: env.server + \"storage/\" + item.image,\r\n            cache: \"default\",\r\n          }}\r\n          style={{ height: 130, width: \"100%\" }}\r\n          resizeMode={\"center\"}\r\n        />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View style={{ padding: 10, marginTop: 15 }}>\r\n      <Text category=\"h4\" style={{textAlign:\"left\"}}>{translate('products',lang)}</Text>\r\n      <View style={{ marginTop: 15 }}></View>\r\n      {items.map((trg, index) => (\r\n        <ItemCard item={trg} key={index} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\nimport {connect} from 'react-redux'\r\nimport {Header,Items} from './Components'\r\nimport {ItemDialog} from '../../../components'\r\nimport {translate} from '../../../translations'\r\nlet ShowAll = (props) => {\r\n    let { itemsList } = props.items;\r\n  let {lang,rtl} = props.locale\r\n  let [showItem, setShowItem] = React.useState(false);\r\nlet [item, setItem] = React.useState({}); // Selected Item When Press Item;\r\n\r\nlet onPressItem = (item) => {\r\n  setItem(item);\r\n  setShowItem(true);\r\n};\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} title={translate('products',lang)} />\r\n          <Items items={itemsList} onPressItem={onPressItem} translate={translate} lang={lang} />\r\n        </ScrollView>\r\n        {showItem && (\r\n          <ItemDialog\r\n            style={{ width: \"100%\" }}\r\n            setShowItem={setShowItem}\r\n            item={item}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowAll);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nexport default ({translate,lang}) => {\r\n    return (\r\n        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\r\n            <Image source={require('../../../../assets/Stander/sh.png')} style={{width:120,height:120}} resizeMode=\"contain\" />\r\n            <Text category=\"h3\" style={{textAlign:'center'}}>{translate('search_product',lang)}</Text>\r\n        </View>\r\n    )\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nexport default ({ translate, lang }) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"../../../../assets/Stander/empty-product.png\")}\r\n        style={{ width: 150, height: 150 }}\r\n        resizeMode=\"contain\"\r\n      />\r\n      <View style={{ paddingTop: 30 }}>\r\n        <Text category=\"h3\" style={{ textAlign: \"center\" }}>\r\n          {translate('no_items',lang)}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,TouchableOpacity,Image} from 'react-native'\r\nimport {Layout,Text,Input,Icon,useTheme} from '@ui-kitten/components'\r\n\r\nimport {Header,SearchForItems,NothingFound} from './Components'\r\n\r\nimport {apis} from '../../../services'\r\n\r\nimport {env} from '../../../constants'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {ItemDialog} from '../../../components'\r\n\r\nlet Search = (props) => {\r\n\r\n    let theme = useTheme();\r\n\r\n    let {lang,rtl} = props.locale\r\n\r\n    let [searchInput,setSearchInput] = React.useState(\"\");\r\n\r\n    // SearchFor Items Show\r\n    let [showSearchForItems,setShowSearchForItems] = React.useState(true);\r\n\r\n\r\n\r\n    let [showItem, setShowItem] = React.useState(false);\r\n\r\n     let [item, setItem] = React.useState({}); // Selected Item When Press Item;\r\n\r\n     let onPressItem = (item) => {\r\n       setItem(item);\r\n       setShowItem(true);\r\n     };\r\n\r\n\r\n\r\n    //\r\n    let [synced,setSynced] = React.useState(false);\r\n\r\n    let [items,setItems] = React.useState([]);\r\n\r\n\r\n    // ---- Search ---- //\r\n    let changeText = (val) => {\r\n        setSearchInput(val);\r\n\r\n         let callSearchHttp = () => {\r\n           apis.main.search(\r\n             searchInput,\r\n             (res) => {\r\n               setItems(res);\r\n               setShowSearchForItems(false);\r\n             },\r\n             (err) => {\r\n               console.log(err);\r\n             }\r\n           );\r\n         };\r\n\r\n        // CheckIf Synced\r\n        if(!synced) {\r\n          // If First Time Make It Good\r\n          setSynced(true);\r\n\r\n          callSearchHttp();\r\n          setTimeout(() => {\r\n            setSynced(false);\r\n          }, 5000);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    let renderIcon = (props)=> (\r\n            <Icon {...props} name={\"search\"} />\r\n    )\r\n\r\n\r\n    let ItemCard = ({ item }) => (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          onPressItem(item);\r\n        }}\r\n        style={{\r\n          borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n          width: \"100%\",\r\n          height: 130,\r\n          backgroundColor: theme[\"color-success-100\"],\r\n          borderColor: theme[\"color-success-300\"],\r\n          borderWidth: 0.5,\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-end\",\r\n          marginTop: 10,\r\n        }}\r\n      >\r\n        <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n          <Text category=\"h5\">{item.title}</Text>\r\n          <View style={{ height: 20 }}></View>\r\n          <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n            {item.price}{translate('jod',lang)}\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <Image\r\n            source={{\r\n              uri: env.server + \"storage/\" + item.image,\r\n              cache: \"default\",\r\n            }}\r\n            style={{ height: 130, width: \"100%\" }}\r\n            resizeMode={\"center\"}\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} title={translate('search',lang)} />\r\n          <View style={{ padding: 15 }}>\r\n            <Input\r\n              placeholder={translate('search_product',lang)}\r\n              value={searchInput}\r\n              onChangeText={(val) => {\r\n                changeText(val);\r\n              }}\r\n              accessoryRight={renderIcon}\r\n              onBlur={() => {\r\n                changeText(searchInput);\r\n              }}\r\n            />\r\n          </View>\r\n          {showSearchForItems && (\r\n            <SearchForItems translate={translate} lang={lang} />\r\n          )}\r\n          {!showSearchForItems && (\r\n            <View style={{ padding: 15 }}>\r\n              {items.length == 0 && (\r\n                <NothingFound translate={translate} lang={lang} />\r\n              )}\r\n              {items.map((trg, index) => (\r\n                <ItemCard item={trg} key={index} />\r\n              ))}\r\n            </View>\r\n          )}\r\n        </ScrollView>\r\n        {showItem && (\r\n          <ItemDialog\r\n            style={{ width: \"100%\" }}\r\n            setShowItem={setShowItem}\r\n            item={item}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.settings.locale,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({title}) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"60%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"80%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width - 170} ry={200} cx={180} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <View style={{ paddingVertical: 40, width: \"100%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\", textAlign: \"center\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Icon,Text,useTheme} from '@ui-kitten/components'\r\n\r\nexport default ({user}) => {\r\n    let theme = useTheme();\r\n    return (\r\n      <View style={{ padding: 15 }}>\r\n        <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\r\n        \r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View>\r\n            <Icon\r\n              name=\"person-outline\" style={{width:44,height:44}} fill={'black'}\r\n            />\r\n          </View>\r\n          <View style={{width:10}}></View>\r\n          <View>\r\n            <Text category=\"h4\" style={{color:theme['text-hint-color']}}>{user.name}</Text>\r\n            <Text category=\"h6\" style={{color:theme['text-hint-color']}}>{user.phone}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View>\r\n            <Icon\r\n              name=\"credit-card-outline\" style={{width:32,height:32}} fill={theme['text-success-color']}\r\n            />\r\n          </View>\r\n          <View>\r\n    <Text category=\"h6\" style={{color:theme['text-hint-color']}}>{user.point}</Text>\r\n          </View>\r\n        </View>\r\n        </View>\r\n        \r\n      </View>\r\n    );\r\n}","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme, Icon } from \"@ui-kitten/components\";\r\n\r\nexport default ({ icon, title, onPress }) => {\r\n  //theme\r\n  let theme = useTheme();\r\n\r\n  // Styles\r\n  let styles = StyleSheet.create({\r\n    box: {\r\n      flexDirection: \"row\",\r\n      padding: 15,\r\n      marginLeft: 20,\r\n      paddingLeft: 0,\r\n      alignItems: \"center\",\r\n      borderBottomColor: theme[\"text-hint-color\"],\r\n      borderBottomWidth: 0.5,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPress();\r\n      }}\r\n      style={styles.box}\r\n    >\r\n      <Icon\r\n        name={icon}\r\n        fill={theme[\"text-hint-color\"]}\r\n        style={{ width: 28, height: 28 }}\r\n      />\r\n      <View id=\"spacing\" style={{ width: 15 }}></View>\r\n      <Text category=\"s1\">{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nimport {Header,UserDetails,SettingsList} from './Components'\r\n\r\nimport {connect} from 'react-redux'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {setLogout} from '../../../stores'\r\nimport {translate} from '../../../translations'\r\nlet SettingsMain = (props) => {\r\n    let {user,auth} = props.user;\r\n    let {lang,rtl} = props.locale\r\n    let sign_out = async () => {\r\n      try {\r\n        await AsyncStorage.removeItem(\"@blueberry_client_token\");\r\n        props.setLogout();\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header navigation={props.navigation} title={translate('settings.settings_main.header',lang)}/>\r\n        <ScrollView contentContainerStyle={{ padding: 5, paddingTop: 0 }}>\r\n          {auth && (\r\n            <View>\r\n              <UserDetails user={user} />\r\n              <SettingsList\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"MyOrders\");\r\n                }}\r\n                icon=\"book-outline\"\r\n                title={translate('drawer.my_orders',lang)}\r\n              />\r\n              <SettingsList\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Addresses\");\r\n                }}\r\n                icon=\"home-outline\"\r\n                title={translate('drawer.mange_address',lang)}\r\n              />\r\n              <SettingsList\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Favourite\");\r\n                }}\r\n                icon=\"heart-outline\"\r\n                title={translate('drawer.favourite',lang)}\r\n              />\r\n            </View>\r\n          )}\r\n          {!auth && (\r\n            <View>\r\n              <SettingsList\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"Auth\");\r\n                }}\r\n                icon=\"person\"\r\n                title={translate('drawer.login',lang)}\r\n              />\r\n            </View>\r\n          )}\r\n          <SettingsList\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Language\");\r\n            }}\r\n            icon=\"file-text-outline\"\r\n            title={translate('drawer.language',lang)}\r\n          />\r\n          {auth && (\r\n            <SettingsList\r\n              icon=\"log-out-outline\"\r\n              title={translate('drawer.logout',lang)}\r\n              onPress={() => {\r\n                sign_out();\r\n              }}\r\n            />\r\n          )}\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user:state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogout:() => dispatch(setLogout())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsMain);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","\r\nimport React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,Icon} from '@ui-kitten/components'\r\nimport {Header} from './Components'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setOrder} from '../../../stores'\r\nimport {translate} from '../../../translations'\r\nlet MyOrders = (props) => {\r\n\r\n    let {lang,rtl} = props.locale\r\n    let pressOrder = (order) => {\r\n        props.setOrder(order);\r\n        props.navigation.navigate(\"OrderDetails\");\r\n    }\r\n\r\n\r\n    let {orders} = props.user;\r\n    let ListItem = ({title,value}) => (\r\n        <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\r\n            <Text category=\"s1\">{title}</Text>\r\n            <Text category=\"s1\">{value}</Text>\r\n        </View>\r\n    )\r\n    let List = ({ data }) => (\r\n      <TouchableOpacity\r\n      onPress={() => {pressOrder(data)}}\r\n        style={{\r\n          padding: 10,\r\n          borderBottomColor: \"#7e7e7e\",\r\n          borderBottomWidth: 1,\r\n          marginTop: 15,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text category=\"h6\">{translate('settings.my_orders.order',lang)} #{data.id}</Text>\r\n          <Icon\r\n            name=\"arrow-right-outline\"\r\n            fill=\"black\"\r\n            style={{ width: 32, height: 32 }}\r\n          />\r\n        </View>\r\n        <View style={{ padding: 10 }}>\r\n          <ListItem title={translate('settings.my_orders.total',lang)} value={data.total + translate('jod',lang)} />\r\n          <ListItem title={translate('settings.my_orders.payment',lang)} value={data.payment} />\r\n          <ListItem title={translate('settings.my_orders.deliver_time',lang)}  value={data.time} />\r\n          <ListItem title={translate('settings.my_orders.note',lang)} value={data.note} />\r\n          <ListItem title={translate('settings.my_orders.date',lang)} value={data.created_at.slice(0,10)} />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header navigation={props.navigation} title={translate('settings.my_orders.header',lang)} />\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {orders.map((trg, index) => (\r\n            <List key={index} data={trg} />\r\n          ))}\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user:state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      setOrder:item => dispatch(setOrder(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrders);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,Image} from 'react-native'\r\nimport {Layout,Text,Icon,Button,useTheme} from '@ui-kitten/components'\r\n\r\nimport {Header} from './Components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {env} from '../../../constants'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nlet OrderDetails =  (props) => {\r\n\r\n    let {order} = props.user\r\n    let theme = useTheme();\r\n\r\n    let {lang,rtl} = props.locale \r\n\r\n    let getStatus = () => {\r\n        switch (order.status) {\r\n            case 0:\r\n                return translate('settings.order_details.status.on_hold',lang)              \r\n            case 1:\r\n                return translate('settings.order_details.status.process',lang)\r\n            case 2:\r\n                return translate('settings.order_details.status.completed',lang)\r\n            default:\r\n                return translate('settings.order_details.status.on_hold',lang)\r\n        }\r\n    }\r\n\r\n    let ListItem = ({ title, value }) => (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Text category=\"s1\">{title}</Text>\r\n        <Text category=\"s1\">{value}</Text>\r\n      </View>\r\n    );\r\n    let List = ({ data }) => (\r\n      <View\r\n        \r\n        style={{\r\n          padding: 10,\r\n          borderBottomColor: \"#7e7e7e\",\r\n          borderBottomWidth: 1,\r\n          marginTop: 15,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text category=\"h6\">{translate('settings.my_orders.order')} #{data.id}</Text>\r\n          <Icon\r\n            name=\"arrow-right-outline\"\r\n            fill=\"black\"\r\n            style={{ width: 32, height: 32 }}\r\n          />\r\n        </View>\r\n        <View style={{ padding: 10 }}>\r\n          <ListItem title={translate('settings.my_orders.total',lang)} value={data.total + \"JOD\"} />\r\n          <ListItem title={translate('settings.my_orders.payment',lang)}  value={data.payment} />\r\n          <ListItem title={translate('settings.my_orders.deliver_time',lang)}  value={data.time} />\r\n          <ListItem title={translate('settings.my_orders.note',lang)} value={data.note} />\r\n          <ListItem title={translate('settings.my_orders.date',lang)} value={data.created_at.slice(0, 10)} />\r\n        </View>\r\n      </View>\r\n    );\r\n\r\n    let ItemCard = ({ item }) => (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          borderBottomWidth: 0.5,\r\n          borderBottomColor: \"#7e7e7e\",\r\n        }}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <Image\r\n            source={{ uri: env.server + \"storage/\" + item.items.image }}\r\n            style={{ width: 100, height: 100 }}\r\n            resizeMode=\"contain\"\r\n          />\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n          <View style={{ padding: 15, paddingVertical: 15 }}>\r\n            <Text category=\"h6\">\r\n              {item.items.title} x{item.qty}\r\n            </Text>\r\n      <Text category=\"s1\">{item.items.price * item.qty}{translate('jod',lang)}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} title={translate('settings.order_details.header',lang)} />\r\n          <List data={order} />\r\n          <View style={{ padding: 15 }}>\r\n            <Text category=\"h6\" style={{textAlign:'left'}}>{translate('settings.order_details.order_items',lang)}</Text>\r\n            {order.order_items.map((trg, index) => (\r\n              <ItemCard item={trg} key={index} />\r\n            ))}\r\n          </View>\r\n          <View style={{ height: 1, backgroundColor: \"#7e7e7e\" }}></View>\r\n          <View style={{ padding: 15 }}>\r\n            <Text category=\"h6\" style={{textAlign:'left'}}>{translate('settings.order_details.order_status',lang)}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              padding: 15,\r\n              paddingVertical: 5,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Icon name=\"archive-outline\" style={{width:32,height:32}} fill=\"black\" />\r\n            <View style={{width:10}}></View>\r\n            <Text category=\"h6\">{getStatus()}</Text>\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderDetails);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React,{useState} from 'react'\r\nimport {View} from 'react-native'\r\n\r\nimport {Button,Text} from '@ui-kitten/components'\r\nimport * as Location from 'expo-location';\r\n\r\nexport default () => {\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    let get_location = async() => {\r\n        let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Permission to access location was denied');\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setLocation(location);\r\n    }\r\n    return (\r\n        <View style={{padding:15}}>\r\n            <Button status=\"info\" onPress={() => {\r\n                get_location();\r\n            }}>Get Location</Button>\r\n            {errorMsg &&\r\n                <Text category=\"s1\">{errorMsg}</Text>\r\n            }\r\n        </View>\r\n    )\r\n}","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, KeyboardAvoidingView, Platform } from \"react-native\";\r\nimport { Button, Text, Input } from \"@ui-kitten/components\";\r\n\r\nimport { apis } from \"../../../../services\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {Loader} from '../../../../components'\r\nimport { setAddresses } from \"../../../../stores\";\r\nimport GetLocation from './GetLocation'\r\n\r\nlet AddAddress = (props) => {\r\n  let { addresses, user } = props.user;\r\n  let [load,setLoad] = React.useState(false);\r\n  let {translate,lang,rtl} = props\r\n  let [data, setData] = React.useState({\r\n    user_id: user.id,\r\n    city: \"\",\r\n    area: \"\",\r\n    address: \"\",\r\n    note: \"\",\r\n    latitude: 0,\r\n    longitude: 0,\r\n  });\r\n\r\n  let add = () => {\r\n    setLoad(true)\r\n    apis.user.addAddress(\r\n      data,\r\n      (res) => {\r\n        let _addresses = [];\r\n        _addresses.push(res.data);\r\n        addresses.forEach((trg, index) => {\r\n          _addresses.push(trg);\r\n        });\r\n        props.setAddresses(_addresses);\r\n        setLoad(false)\r\n        props._handleAddAddress();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        setLoad(false)\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n      style={{\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        borderTopRightRadius: 30,\r\n        borderTopLeftRadius: 30,\r\n        backgroundColor: \"white\",\r\n        borderColor: \"#7e7e7e\",\r\n        borderWidth: 1,\r\n      }}\r\n    >\r\n      <View style={{ padding: 15 }}>\r\n    <Text category=\"h3\" style={{textAlign:'left',marginBottom:15}}>{translate('settings.address.add_new_address',lang)}</Text>\r\n        <View style={{ paddingTop: 5 }}>\r\n          <Input\r\n            placeholder={translate('settings.address.city',lang)}\r\n            value={data.city}\r\n            textAlign={rtl? \"right\":\"left\"}\r\n            onChangeText={(val) => setData({ ...data, city: val })}\r\n            label={translate('settings.address.city',lang)}\r\n          />\r\n        </View>\r\n        <View style={{ paddingTop: 5 }}>\r\n          <Input\r\n            placeholder={translate('settings.address.area',lang)}\r\n            value={data.area}\r\n            textAlign={rtl? \"right\":\"left\"}\r\n            onChangeText={(val) => setData({ ...data, area: val })}\r\n            label={translate('settings.address.area',lang)}\r\n          />\r\n        </View>\r\n        <View style={{ paddingTop: 5 }}>\r\n          <Input\r\n            placeholder={translate('settings.address.address',lang)}\r\n            value={data.address}\r\n            textAlign={rtl? \"right\":\"left\"}\r\n            onChangeText={(val) => setData({ ...data, address: val })}\r\n            label={translate('settings.address.address',lang)}\r\n          />\r\n        </View>\r\n        <View style={{ paddingTop: 5 }}>\r\n          <Input\r\n            placeholder={translate('settings.address.note',lang)}\r\n            value={data.note}\r\n            textAlign={rtl? \"right\":\"left\"}\r\n            onChangeText={(val) => setData({ ...data, note: val })}\r\n            label={translate('settings.address.note',lang)}\r\n          />\r\n        </View>\r\n        <GetLocation />\r\n        <View style={{ marginTop: 15 }}>\r\n          <Button\r\n            status=\"success\"\r\n            onPress={() => {\r\n              add();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </View>\r\n      </View>\r\n      {load && \r\n        <Loader />\r\n      }\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAddresses: (item) => dispatch(setAddresses(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAddress);\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\r\n\r\nexport default ({ data, status, index,translate,lang }) => {\r\n  let theme = useTheme();\r\n  let ListView = ({ title, value, bold = false }) => (\r\n    <View\r\n      style={{\r\n        paddingVertical: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderBottomColor:\r\n          status == \"success\" ? theme[\"color-success-500\"] : \"#7e7e7e\",\r\n        borderBottomWidth: bold ? 0 : 0.5,\r\n      }}\r\n    >\r\n      <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n        {title}\r\n      </Text>\r\n      <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n        {value}\r\n      </Text>\r\n    </View>\r\n  );\r\n  return (\r\n    <View\r\n      style={{\r\n        marginTop: 15,\r\n        padding: 15,\r\n        marginVertical: 10,\r\n        borderRadius: 10,\r\n        borderColor:\r\n          status == \"success\" ? theme[\"color-success-500\"] : \"#7e7e7e\",\r\n        borderWidth: 0.5,\r\n      }}\r\n    >\r\n      <ListView title={translate('settings.address.city',lang)} value={data.city} />\r\n      <ListView title={translate('settings.address.area',lang)} value={data.area} />\r\n      <ListView title={translate('settings.address.address',lang)} value={data.address} />\r\n      <ListView title={translate('settings.address.note',lang)} value={data.note} />\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,ScrollView} from 'react-native'\r\nimport {Layout,Text,Button,Icon,useTheme} from '@ui-kitten/components'\r\n\r\nimport {Header,AddAddress,AddressBox} from './Components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nlet Addresses = (props) => {\r\n\r\n  let theme = useTheme();\r\n\r\n    let {addresses} = props.user;\r\n    let {lang,rtl} = props.locale\r\n    let [showAddAddress, setShowAddAddress] = React.useState(false);\r\n\r\n    let _handleAddAddress = () => {\r\n      setShowAddAddress(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header navigation={props.navigation} title={translate('settings.address.header',lang)} />\r\n        <View\r\n          style={{\r\n            marginTop: -30,\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            status=\"success\"\r\n            size=\"small\"\r\n            onPress={() => {\r\n              setShowAddAddress(true);\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"plus-circle-outline\"\r\n              style={{ width: 42, height: 42 }}\r\n              fill={\"white\"}\r\n            />\r\n          </Button>\r\n        </View>\r\n        {addresses.length >= 1 && (\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            {addresses.map((trg, index) => (\r\n              <AddressBox\r\n              lang={lang}\r\n              translate={translate}\r\n                index={index}\r\n                data={trg}\r\n                key={index}\r\n                status=\"basic\"\r\n              />\r\n            ))}\r\n            <View style={{ height: 100 }}></View>\r\n          </ScrollView>\r\n        )}\r\n        {addresses.length == 0 && (\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/Stander/address.png\")}\r\n              style={{ width: 120, height: 120 }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <View style={{ marginTop: 20 }}>\r\n              <Text category=\"h5\" style={{ textAlign: \"center\" }}>\r\n              {translate('settings.address.no_address',lang)}\r\n              </Text>\r\n              <Text\r\n                style={{ color: theme[\"text-hint-color\"], textAlign: \"center\" }}\r\n                category=\"s1\"\r\n              >\r\n                {translate('settings.address.please_add_new',lang)}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        {showAddAddress && <AddAddress rtl={rtl} translate={translate} lang={lang} _handleAddAddress={_handleAddAddress} />}\r\n      </Layout>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addresses);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              Favourite\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,TouchableOpacity,Image} from 'react-native'\r\nimport {Layout,Text,useTheme} from '@ui-kitten/components'\r\n\r\nimport {Header} from './Components'\r\n\r\nimport {ItemDialog} from '../../../components'\r\n\r\nimport {env} from '../../../constants'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nlet Favourite = (props) => {\r\n  let [showItem, setShowItem] = React.useState(false);\r\n  let [item, setItem] = React.useState({}); // Selected Item When Press Item;\r\n\r\n  let {lang,rtl} = props.locale\r\n\r\n  let onPressItem = (item) => {\r\n    setItem(item);\r\n    setShowItem(true);\r\n  };\r\n\r\n  let theme = useTheme();\r\n  let { favourite } = props.user;\r\n  let ItemCard = ({ item }) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPressItem(item);\r\n      }}\r\n      style={{\r\n        borderRadius: Platform.OS == \"ios\" ? 20 : 10,\r\n        width: \"100%\",\r\n        height: 130,\r\n        backgroundColor: theme[\"color-success-100\"],\r\n        borderColor: theme[\"color-success-300\"],\r\n        borderWidth: 0.5,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginTop: 10,\r\n      }}\r\n    >\r\n      <View style={{ flex: 2, paddingHorizontal: 15 }}>\r\n        <Text category=\"h5\">{item.title}</Text>\r\n        <View style={{ height: 20 }}></View>\r\n        <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n          {item.price}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <Image\r\n          source={{\r\n            uri: env.server + \"storage/\" + item.image,\r\n            cache: \"default\",\r\n          }}\r\n          style={{ height: 130, width: \"100%\" }}\r\n          resizeMode={\"center\"}\r\n        />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <Header navigation={props.navigation} title={translate('settings.favourite.header',lang)} />\r\n        <View style={{ height: 20 }}></View>\r\n        {favourite.map((trg, index) => (\r\n          <ItemCard item={trg} key={index} />\r\n        ))}\r\n      </ScrollView>\r\n      {showItem && (\r\n        <ItemDialog\r\n          style={{ width: \"100%\" }}\r\n          setShowItem={setShowItem}\r\n          item={item}\r\n          translate={translate}\r\n          lang={lang}\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user:state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourite);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"50%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"30%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"20%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={400} ry={200} cx={0} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\" }}>\r\n              Language\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,CheckBox} from '@ui-kitten/components'\r\nimport {changeLanguage,translate} from '../../../translations/index'\r\nimport {Header} from './Components'\r\nimport {connect} from 'react-redux'\r\nlet Language =  (props) => {\r\n\r\n    let [inx,setInx] = React.useState(0);\r\n\r\n\r\n    React.useEffect(() => {\r\n        let lang = props.locale.lang;\r\n\r\n        if(lang == 'en') {\r\n            setInx(0);\r\n        } else if(lang == 'ar') {\r\n            setInx(1);\r\n        }\r\n    },[])\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header navigation={props.navigation} title={translate('settings.language.header',props.locale.lang)} />\r\n        <View style={{ padding: 15 }}>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              // change Language\r\n              // Check if not the same language\r\n              if (inx !== 0) {\r\n                changeLanguage(\"en\", false);\r\n              }\r\n            }}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              padding: 16,\r\n              borderBottomColor: \"#7e7e7e\",\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n          >\r\n            <CheckBox status=\"success\" checked={inx == 0 ? true : false} />\r\n            <View style={{ width: 15 }}></View>\r\n            <Text category=\"h5\">{translate('settings.language.english',props.locale.lang)}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              // change Language\r\n              // Check if not the same language\r\n              if (inx !== 1) {\r\n                changeLanguage(\"ar\", true);\r\n              }\r\n            }}\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              padding: 16,\r\n              borderBottomColor: \"#7e7e7e\",\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n          >\r\n            <CheckBox status=\"success\" checked={inx == 1 ? true : false} />\r\n            <View style={{ width: 15 }}></View>\r\n            <Text category=\"h5\">{translate('settings.language.arabic',props.locale.lang)}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setPayment: (item) => dispatch(setPayment(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Language);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport {View} from 'react-native'\r\nimport {Text,useTheme} from '@ui-kitten/components'\r\n\r\nexport default ({translate,lang,rtl}) => {\r\n    let theme = useTheme();\r\n    let value = () => {\r\n        let _x = 5\r\n        let _width = _x * 10 + '%'\r\n        return _width\r\n    }\r\n    return (\r\n        <View style={{paddingTop:5,paddingHorizontal:15}}>\r\n            <View style={{position:'relative'}}>\r\n                <View style={{width:'100%',borderColor:'#7e7e7e',borderWidth:1,paddingVertical:10,borderRadius:5}}>\r\n                    <Text style={{color:theme['text-hint-color'],textAlign:'center',zIndex:110}}>{\" \"}</Text>\r\n                </View>\r\n                <View style={{zIndex:102,position:'absolute',left:0,top:0,backgroundColor:theme['color-success-500'],paddingVertical:10,width:value(),borderColor:'#7e7e7e',borderWidth:1,borderRadius:5}}>\r\n                    <Text>{\" \"}</Text>\r\n                </View>\r\n                <View style={{zIndex:102,position:'absolute',left:0,top:0,paddingVertical:10,width:'100%',borderColor:'#7e7e7e',borderWidth:1,borderRadius:5}}>\r\n    <Text category=\"s1\" style={{color:theme['text-hint-color'],textAlign:'center',zIndex:110}}>{value()} {translate('goods_basket.to_complete_this_basket',lang)}</Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport {View} from 'react-native'\r\nimport {Text} from '@ui-kitten/components'\r\n\r\nexport default ({title,value}) => {\r\n    return (\r\n        <View style={{padding:15,borderRadius:5,borderColor:'#7e7e7e',borderWidth:1}}>\r\n            <Text category=\"h6\" style={{textAlign:'center'}}>{title}</Text>\r\n            <View style={{paddingHorizontal:1,paddingVertical:5}}>\r\n                <View style={{height:1,backgroundColor:'#7e7e7e'}}></View>\r\n            </View>\r\n            <Text category=\"s1\" style={{textAlign:'center'}}>{value}</Text>\r\n        </View>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport {View,Image,ScrollView} from 'react-native'\r\nimport {Text,Layout} from '@ui-kitten/components'\r\n\r\nimport {Header,Spiner,DetailsBox} from './Components'\r\nimport {connect} from 'react-redux'\r\nimport {translate} from '../../translations'\r\nlet GoodsBasket =  (props) => {\r\n    /**\r\n     * TODO: Make Basket Of Goods Trasnlate\r\n     */\r\n\r\n     let {lang,rtl} = props.locale\r\n    return (\r\n        <Layout style={{flex:1}}>\r\n            <Header navigation={props.navigation} title={translate('goods_basket.header',lang)} />\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n                <View style={{padding:15}}>\r\n                    <View style={{justifyContent:'center',alignItems:'center',width:'100%'}}>\r\n                        <Image source={require('../../assets/Stander/basket-min.jpg')} style={{width:100,height:100}} resizeMode=\"center\" />\r\n                    </View>\r\n                    <Text style={{textAlign:'left'}} category=\"h6\">{translate('goods_basket.good_basket_counter',lang)}</Text>\r\n                </View>\r\n                <Spiner translate={translate} rtl={rtl} lang={lang} />\r\n                <View style={{paddingTop:25,paddingHorizontal:10}}>\r\n                    <Text category=\"s1\">{translate('goods_basket.basket_procced',lang)}</Text>\r\n                </View>\r\n                <View style={{paddingTop:20,flexDirection:'row',alignItems:'center'}}>\r\n                    <View style={{marginHorizontal:10,flex:1}}>\r\n                        <DetailsBox title={translate('goods_basket.basket_done',lang)} value={1} />\r\n                    </View>\r\n                    <View style={{marginHorizontal:10,flex:1}}>\r\n                        <DetailsBox title={translate('goods_basket.today_done',lang)} value={1} />\r\n                    </View>\r\n                </View>\r\n                <View style={{padding:15}}>\r\n                    <Text category=\"s1\">{translate('goods_basket.good_de',lang)}</Text>\r\n                    <Text category=\"s1\">{translate('goods_basket.details',lang)}</Text>\r\n                </View>\r\n            </ScrollView>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      locale:state.settings.locale\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n  };\r\n  export default connect(mapStateToProps, mapDispatchToProps)(GoodsBasket);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View } from \"react-native\";\r\nimport { Icon, Text, useTheme } from \"@ui-kitten/components\";\r\n\r\nexport default ({ user }) => {\r\n  let theme = useTheme();\r\n  return (\r\n    <View style={{ padding: 15 }}>\r\n      <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n        <View>\r\n          <Icon\r\n            name=\"person-outline\"\r\n            style={{ width: 44, height: 44 }}\r\n            fill={\"black\"}\r\n          />\r\n        </View>\r\n        <View style={{ width: 10 }}></View>\r\n        <View>\r\n          <Text category=\"h4\" style={{ color: theme[\"text-hint-color\"] }}>\r\n            {user.name}\r\n          </Text>\r\n          <Text category=\"h6\" style={{ color: theme[\"text-hint-color\"] }}>\r\n            {user.phone}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Layout, Text, useTheme, Icon } from \"@ui-kitten/components\";\r\n\r\nexport default ({ icon, title, onPress }) => {\r\n  //theme\r\n  let theme = useTheme();\r\n\r\n  // Styles\r\n  let styles = StyleSheet.create({\r\n    box: {\r\n      flexDirection: \"row\",\r\n      padding: 15,\r\n      marginLeft: 20,\r\n      paddingLeft: 0,\r\n      alignItems: \"center\",\r\n      borderBottomColor: theme[\"text-hint-color\"],\r\n      borderBottomWidth: 0.5,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPress();\r\n      }}\r\n      style={styles.box}\r\n    >\r\n      <Icon\r\n        name={icon}\r\n        fill={theme[\"text-hint-color\"]}\r\n        style={{ width: 28, height: 28 }}\r\n      />\r\n      <View id=\"spacing\" style={{ width: 15 }}></View>\r\n      <Text category=\"s1\">{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { View, Image } from \"react-native\";\r\nimport { DrawerContentScrollView } from \"@react-navigation/drawer\";\r\nimport { useTheme, Text } from \"@ui-kitten/components\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport UserDetails from './UserDetails'\r\nimport SettingsList from './SettingsList'\r\nimport {translate} from '../../translations'\r\nimport {setLogout} from '../../stores'\r\nconst DrawerContent = (props) => {\r\n  let theme = useTheme();\r\n\r\n  let {auth,user} = props.user;\r\n  let {lang,rtl} = props.locale\r\n\r\n  let sign_out = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(\"@blueberry_client_token\");\r\n      props.setLogout();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DrawerContentScrollView\r\n      {...props}\r\n      style={{ paddingTop: 0, marginTop: 0, backgroundColor: \"#f4f9ff\" }}\r\n    >\r\n      <View\r\n        style={{\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#f4f9ff\",\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../../assets/logo.png\")}\r\n          style={{ width: 150, height: 150 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n      </View>\r\n      {auth && (\r\n        <View>\r\n          <UserDetails user={user} />\r\n          <SettingsList\r\n            onPress={() => {\r\n              props.navigation.navigate(\"MyOrders\");\r\n            }}\r\n            icon=\"book-outline\"\r\n            title={translate('drawer.my_orders',lang)}\r\n          />\r\n          <SettingsList\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Addresses\");\r\n            }}\r\n            icon=\"home-outline\"\r\n            title={translate('drawer.mange_address',lang)}\r\n          />\r\n          <SettingsList\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Favourite\");\r\n            }}\r\n            icon=\"heart-outline\"\r\n            title={translate('drawer.favourite',lang)}\r\n          />\r\n        </View>\r\n      )}\r\n      {!auth && (\r\n        <View>\r\n          <SettingsList\r\n            onPress={() => {\r\n              props.navigation.navigate(\"Auth\");\r\n            }}\r\n            icon=\"person\"\r\n            title={translate('drawer.login',lang)}\r\n          />\r\n        </View>\r\n      )}\r\n      <SettingsList\r\n        onPress={() => {\r\n          props.navigation.navigate(\"Language\");\r\n        }}\r\n        icon=\"file-text-outline\"\r\n        title={translate('drawer.language',lang)}\r\n      />\r\n      {auth && (\r\n        <SettingsList\r\n          icon=\"log-out-outline\"\r\n          title={translate('drawer.logout',lang)}\r\n          onPress={() => {\r\n            sign_out();\r\n          }}\r\n        />\r\n      )}\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user:state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLogout:() => dispatch(setLogout())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerContent);\r\n","import * as React from 'react'\r\n\r\n\r\nimport {\r\n    createDrawerNavigator\r\n} from \"@react-navigation/drawer\";\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nimport {Home} from '../containers/Main'\r\nimport DrawerContent from \"../components/DrawerContent\";\r\n\r\nexport default function DrawerNavigation() {\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName={\"Home\"}\r\n      drawerContent={(props) => <DrawerContent {...props} />}\r\n    >\r\n      <Drawer.Screen name={\"Home\"} component={Home} />\r\n    </Drawer.Navigator>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\n\r\nimport {Home,Category,Items,ShowAll,Search} from '../containers/Main'\r\nimport {SettingsMain,MyOrders,OrderDetails,Addresses,Favourite,Language} from '../containers/Settings'\r\nimport GoodsBasket from '../containers/GoodsBasket'\r\n\r\nimport DrawerNavigation from './DrawerNavigation'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport {Animations} from '../constants'\r\n\r\n/** Render() */\r\nexport default function MainNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"DrawerNavigation\"}\r\n    >\r\n      <Stack.Screen name=\"DrawerNavigation\" component={DrawerNavigation} />\r\n      <Stack.Screen name=\"Category\" component={Category} />\r\n      <Stack.Screen name=\"Items\" component={Items} />\r\n      <Stack.Screen name=\"ShowAll\" component={ShowAll} />\r\n      <Stack.Screen name=\"Search\" component={Search} />\r\n      <Stack.Screen name=\"MyOrders\" component={MyOrders} />\r\n      <Stack.Screen name=\"OrderDetails\" component={OrderDetails} />\r\n      <Stack.Screen name=\"Addresses\" component={Addresses} />\r\n      <Stack.Screen name=\"Favourite\" component={Favourite} />\r\n      <Stack.Screen name=\"Language\" component={Language} />\r\n      <Stack.Screen name=\"GoodsBasket\" component={GoodsBasket} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,TopNavigation,useTheme} from '@ui-kitten/components'\r\nimport {connect} from 'react-redux'\r\nimport {env} from '../../constants'\r\nimport {setCategory} from '../../stores'\r\nimport {translate} from '../../translations'\r\nlet Categories = (props) => {\r\n    let theme = useTheme();\r\n    let {categories} = props.categories\r\n    let {lang,rtl} = props.locale\r\n     let pressCategory = (category) => {\r\n       props.setCategory(category);\r\n       props.navigation.navigate(\"Category\");\r\n     };\r\n\r\n    let CategoryCard = ({category}) => (\r\n      <TouchableOpacity\r\n      onPress={() => {\r\n        pressCategory(category)\r\n      }}\r\n        style={{\r\n          padding: 15,\r\n          borderTopRightRadius: 30,\r\n          backgroundColor: theme[\"color-success-300\"],\r\n          borderColor: theme[\"color-success-500\"],\r\n          borderWidth: 0.5,\r\n          width:'100%',\r\n          marginTop:25\r\n          \r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            paddingVertical: 15,\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Image\r\n            source={{uri:env.server + 'storage/' + category.image}}\r\n            style={{ width: 100, height: 100 }}\r\n          />\r\n        </View>\r\n        <Text category=\"h3\" style={{textAlign:'center'}}>{category.title}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <TopNavigation title={translate('categories',lang)} />\r\n        <ScrollView\r\n         showsVerticalScrollIndicator={false}\r\n        >\r\n          {categories.map((trg, index) => (\r\n            <CategoryCard key={index} category={trg} />\r\n          ))}\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.categories,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCategory:item => dispatch(setCategory(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({title}) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"60%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"80%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width - 170} ry={200} cx={180} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <View style={{ paddingVertical: 40, width: \"100%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\", textAlign: \"center\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image} from 'react-native'\r\nimport {useTheme,Text,Icon,Button} from '@ui-kitten/components'\r\nimport {env} from '../../../../constants'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nlet Items = ({removeItems,checkout,items,translate,lang}) => {\r\n\r\n\r\n  let theme = useTheme()\r\n\r\n  \r\n\r\n    let ItemCard = ({ item }) => (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          borderBottomWidth: 0.5,\r\n          borderBottomColor: \"#7e7e7e\",\r\n        }}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <Image\r\n            source={{ uri: env.server + \"storage/\" + item.image }}\r\n            style={{ width: 100, height: 100 }}\r\n            resizeMode=\"contain\"\r\n          />\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n          <View style={{ padding: 15, paddingVertical: 15 }}>\r\n            <Text category=\"h6\">\r\n              {item.title} x{item.qty}\r\n            </Text>\r\n            <Text category=\"s1\">\r\n              {item.price}\r\n              {translate(\"jod\",lang)}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={{ position: \"absolute\", bottom: 0, right: 0 }}>\r\n          <Button appearance=\"ghost\" onPress={() => removeItems(item)}>\r\n            <Icon\r\n              fill={theme[\"color-danger-500\"]}\r\n              name=\"trash-2-outline\"\r\n              style={{ width: 26, height: 26 }}\r\n            />\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    );\r\n    return (\r\n      <View\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          borderRadius: 5,\r\n          borderColor: \"#7e7e7e\",\r\n          borderWidth: 0.5,\r\n          marginTop: 15,\r\n          marginHorizontal: 10,\r\n        }}\r\n      >\r\n        <View style={{ padding: 10 }}>\r\n          {items.map((trg, index) => (\r\n            <ItemCard key={index} item={trg} />\r\n          ))}\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    checkout:state.checkout\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Items);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Layout,Text,Input,Button} from '@ui-kitten/components'\r\n\r\nexport default ({translate,lang}) => {\r\n    return (\r\n      <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n        <View style={{ flex: 2 }}>\r\n          <Input\r\n            placeholder={translate(\"checkout.basket.code.discount_code\", lang)}\r\n          />\r\n        </View>\r\n        <View style={{ width: 25 }}></View>\r\n        <View style={{ flex: 1 }}>\r\n          <Button status=\"basic\">\r\n            {translate(\"checkout.basket.code.add\", lang)}\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    );\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nexport default ({items,translate,lang}) => {\r\n  let total = () => {\r\n    let _total = 0;\r\n    items.forEach((item, index) => {\r\n      let _fear = item.price * item.qty;\r\n      _total = _total + _fear;\r\n    });\r\n\r\n    return _total;\r\n  };\r\n\r\n    let ListView = ({ title, value, bold = false }) => (\r\n      <View\r\n        style={{\r\n          paddingVertical: 10,\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          borderBottomColor: \"#7e7e7e\",\r\n          borderBottomWidth: bold?0:0.5,\r\n        }}\r\n      >\r\n        <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n          {title}\r\n        </Text>\r\n        <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n          {value}{translate('jod',lang)}\r\n        </Text>\r\n      </View>\r\n    );\r\n    return (\r\n      <View\r\n        style={{\r\n          padding: 15,\r\n          borderTopColor: \"#7e7e7e\",\r\n          borderTopWidth: 0.5,\r\n          borderBottomWidth: 0.5,\r\n          borderBottomColor: \"#7e7e7e\",\r\n        }}\r\n      >\r\n        <ListView\r\n          title={translate(\"checkout.basket.fee.fear\", lang)}\r\n          value={total()}\r\n        />\r\n        <ListView\r\n          title={translate(\"checkout.basket.fee.delivery\", lang)}\r\n          value={2}\r\n        />\r\n        <ListView\r\n          title={translate(\"checkout.basket.fee.total\", lang)}\r\n          value={total() + 2}\r\n          bold={true}\r\n        />\r\n      </View>\r\n    );\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,Image} from 'react-native'\r\nimport {Layout,Text,Button} from '@ui-kitten/components'\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Header, Items, Code, Fee } from \"./Components\";\r\n\r\nimport {setItems} from '../../../stores'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nlet Basket = (props) => {\r\n  let { items } = props.checkout;\r\n  let {auth} = props.user\r\n\r\n  let {lang,rtl} = props.locale\r\n\r\n  let _removeItem = (item) => {\r\n    let _items = [];\r\n    items.forEach((trg, index) => {\r\n      if (item.id !== trg.id) {\r\n        _items.push(trg);\r\n      }\r\n    });\r\n\r\n    props._setItems(_items);\r\n  };\r\n\r\n  let pressCheckout = () => {\r\n    // Check if User Auth\r\n    if(auth) {\r\n      props.navigation.navigate('Address');\r\n    }else {\r\n      // Navigation to login and register\r\n      props.navigation.navigate('Auth');\r\n    }\r\n  }\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        {items.length >= 1 && (\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <Header\r\n              navigation={props.navigation}\r\n              title={translate(\"checkout.basket.header\", lang)}\r\n            />\r\n            <Items removeItems={_removeItem} items={items} translate={translate} lang={lang} />\r\n            <Code translate={translate} lang={lang} />\r\n            <Fee items={items} translate={translate} lang={lang} />\r\n            <Button\r\n              status=\"success\"\r\n              onPress={() => {\r\n                pressCheckout();\r\n              }}\r\n            >\r\n              {translate(\"checkout.basket.checkout\", lang)}\r\n            </Button>\r\n          </ScrollView>\r\n        )}\r\n        {items.length == 0 && (\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/Stander/empty-product.png\")}\r\n              style={{ width: 150, height: 150 }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <View style={{ paddingTop: 30 }}>\r\n              <Text category=\"h3\" style={{ textAlign: \"center\" }}>\r\n                {translate(\"checkout.basket.no_items\", lang)}\r\n              </Text>\r\n              <Text style={{ marginTop: 15, textAlign: \"center\" }}>\r\n                {translate(\"checkout.basket.please_add_some_products\", lang)}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    checkout: state.checkout,\r\n    user:state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    _setItems:item => dispatch(setItems(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {Layout,Text,useTheme} from '@ui-kitten/components'\r\n\r\nexport default ({ data, status,setAddressPath,index,translate,lang }) => {\r\n  let theme = useTheme();\r\n  let ListView = ({ title, value, bold = false }) => (\r\n    <TouchableOpacity\r\n    onPress={() => {setAddressPath(index)}}\r\n      style={{\r\n        paddingVertical: 10,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        borderBottomColor:\r\n          status == \"success\" ? theme[\"color-success-500\"] : \"#7e7e7e\",\r\n        borderBottomWidth: bold ? 0 : 0.5,\r\n      }}\r\n    >\r\n      <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n        {title}\r\n      </Text>\r\n      <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\r\n        {value}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n  return (\r\n    <View\r\n      style={{\r\n        marginTop: 15,\r\n        padding: 15,\r\n        marginVertical: 10,\r\n        borderRadius: 10,\r\n        borderColor:\r\n          status == \"success\" ? theme[\"color-success-500\"] : \"#7e7e7e\",\r\n        borderWidth: 0.5,\r\n      }}\r\n    >\r\n      <ListView\r\n        title={translate(\"checkout.address.city\", lang)}\r\n        value={data.city}\r\n      />\r\n      <ListView\r\n        title={translate(\"checkout.address.area\", lang)}\r\n        value={data.area}\r\n      />\r\n      <ListView\r\n        title={translate(\"checkout.address.address\", lang)}\r\n        value={data.address}\r\n      />\r\n      <ListView\r\n        title={translate(\"checkout.address.note\", lang)}\r\n        value={data.note}\r\n      />\r\n    </View>\r\n  );\r\n};","import React,{useState} from 'react'\r\nimport {View} from 'react-native'\r\n\r\nimport {Button,Text} from '@ui-kitten/components'\r\nimport * as Location from 'expo-location';\r\n\r\nexport default () => {\r\n    const [location, setLocation] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState(null);\r\n    let get_location = async() => {\r\n        let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Permission to access location was denied');\r\n      }\r\n\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setLocation(location);\r\n    }\r\n    return (\r\n        <View style={{padding:15}}>\r\n            <Button status=\"info\" onPress={() => {\r\n                get_location();\r\n            }}>Get Location</Button>\r\n            {errorMsg &&\r\n                <Text category=\"s1\">{errorMsg}</Text>\r\n            }\r\n        </View>\r\n    )\r\n}","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,KeyboardAvoidingView,Platform} from 'react-native'\r\nimport {Button,Text,Input} from '@ui-kitten/components'\r\n\r\nimport {apis} from '../../../../services'\r\nimport GetLocation from './GetLocation'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {Loader} from '../../../../components'\r\nimport {setAddresses} from '../../../../stores'\r\n\r\nlet AddAddress = (props) => {\r\n    let {addresses,user} = props.user\r\n    let [load,setLoad] = React.useState(false)\r\n    let [data,setData] = React.useState({\r\n        user_id:user.id,\r\n        city:'',\r\n        area:'',\r\n        address:'',\r\n        note:'',\r\n        latitude:0,\r\n        longitude:0\r\n    });\r\n\r\n    let add = () => {\r\n      setLoad(true)\r\n        apis.user.addAddress(data,(res) => {\r\n            let _addresses = [];\r\n            _addresses.push(res.data)\r\n            addresses.forEach((trg,index) => {\r\n                _addresses.push(trg)\r\n            });\r\n            setLoad(false)\r\n            props.setAddresses(_addresses);\r\n            props._handleAddAddress();\r\n        },err => {console.log(err);setLoad(false)})\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: 0,\r\n          bottom: 0,\r\n          width: \"100%\",\r\n          borderTopRightRadius: 30,\r\n          borderTopLeftRadius: 30,\r\n          backgroundColor: \"white\",\r\n          borderColor: \"#7e7e7e\",\r\n          borderWidth: 1,\r\n        }}\r\n      >\r\n        <View style={{ padding: 15 }}>\r\n          <Text category=\"h3\">Add New Address</Text>\r\n          <View style={{ paddingTop: 5 }}>\r\n            <Input\r\n              placeholder={props.translate(\"checkout.address.city\", props.lang)}\r\n              value={data.city}\r\n              onChangeText={(val) => setData({ ...data, city: val })}\r\n              label={props.translate(\"checkout.address.city\", props.lang)}\r\n            />\r\n          </View>\r\n          <View style={{ paddingTop: 5 }}>\r\n            <Input\r\n              placeholder={props.translate(\"checkout.address.area\", props.lang)}\r\n              value={data.area}\r\n              onChangeText={(val) => setData({ ...data, area: val })}\r\n              label={props.translate(\"checkout.address.area\", props.lang)}\r\n            />\r\n          </View>\r\n          <View style={{ paddingTop: 5 }}>\r\n            <Input\r\n              placeholder={props.translate(\r\n                \"checkout.address.address\",\r\n                props.lang\r\n              )}\r\n              value={data.address}\r\n              onChangeText={(val) => setData({ ...data, address: val })}\r\n              label={props.translate(\"checkout.address.address\", props.lang)}\r\n            />\r\n          </View>\r\n          <View style={{ paddingTop: 5 }}>\r\n            <Input\r\n              placeholder={props.translate(\"checkout.address.note\", props.lang)}\r\n              value={data.note}\r\n              onChangeText={(val) => setData({ ...data, note: val })}\r\n              label={props.translate(\"checkout.address.note\", props.lang)}\r\n            />\r\n          </View>\r\n          <GetLocation />\r\n          <View style={{ marginTop: 15 }}>\r\n            <Button\r\n              status=\"success\"\r\n              onPress={() => {\r\n                add();\r\n              }}\r\n            >\r\n              {props.translate(\"checkout.address.save\", props.lang)}\r\n            </Button>\r\n          </View>\r\n        </View>\r\n        {load && <Loader />}\r\n      </KeyboardAvoidingView>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAddresses: (item) => dispatch(setAddresses(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAddress);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,Image} from 'react-native'\r\nimport {Layout,Text,Button,Icon,useTheme} from '@ui-kitten/components'\r\n\r\nimport {Header,AddressBox,AddAddress} from './Components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setCheckoutAddress} from '../../../stores'\r\nimport {translate} from '../../../translations'\r\n\r\nlet Address =  (props) => {\r\n    let theme = useTheme();\r\n\r\n    let {addresses} = props.user\r\n\r\n    let {lang,rtl} = props.locale\r\n    let [addressPath,setAddressPath] = React.useState(0);\r\n    let [showAddAddress,setShowAddAddress] = React.useState(false)\r\n\r\n    let _handleAddAddress = () => {\r\n      setShowAddAddress(false)\r\n    }\r\n\r\n    let Next = () => {\r\n      props._setCheckoutAddress(addresses[addressPath].id);\r\n      props.navigation.navigate(\"Payment\");\r\n    }\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header\r\n          navigation={props.navigation}\r\n          title={translate(\"checkout.address.header\", lang)}\r\n        />\r\n        <View\r\n          style={{\r\n            marginTop: -30,\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            status=\"success\"\r\n            size=\"small\"\r\n            onPress={() => {\r\n              setShowAddAddress(true);\r\n            }}\r\n          >\r\n            <Icon\r\n              name=\"plus-circle-outline\"\r\n              style={{ width: 42, height: 42 }}\r\n              fill={\"white\"}\r\n            />\r\n          </Button>\r\n        </View>\r\n        {addresses.length >= 1 && (\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            {addresses.map((trg, index) => (\r\n              <AddressBox\r\n                index={index}\r\n                setAddressPath={setAddressPath}\r\n                data={trg}\r\n                key={index}\r\n                status={addressPath == index ? \"success\" : \"basic\"}\r\n                translate={translate}\r\n                lang={lang}\r\n              />\r\n            ))}\r\n            <View style={{ height: 100 }}></View>\r\n          </ScrollView>\r\n        )}\r\n        {addresses.length == 0 && (\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/Stander/address.png\")}\r\n              style={{ width: 120, height: 120 }}\r\n              resizeMode=\"contain\"\r\n            />\r\n            <View style={{ marginTop: 20 }}>\r\n              <Text category=\"h5\" style={{ textAlign: \"center\" }}>\r\n                {translate(\"checkout.address.there_are_no_address\", lang)}\r\n              </Text>\r\n              <Text\r\n                style={{ color: theme[\"text-hint-color\"], textAlign: \"center\" }}\r\n                category=\"s1\"\r\n              >\r\n                {translate(\"checkout.address.please_add_new\", lang)}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        <View\r\n          style={{\r\n            marginTop: 20,\r\n            position: \"absolute\",\r\n            left: 0,\r\n            width: \"100%\",\r\n            bottom: 0,\r\n            backgroundColor: \"white\",\r\n            paddingBottom: 10,\r\n          }}\r\n        >\r\n          <Button\r\n            disabled={addresses.length == 0 ? true : false}\r\n            status=\"success\"\r\n            onPress={() => {\r\n              Next();\r\n            }}\r\n          >\r\n            {translate(\"checkout.address.next\", lang)}\r\n          </Button>\r\n        </View>\r\n        {showAddAddress && (\r\n          <AddAddress\r\n            _handleAddAddress={_handleAddAddress}\r\n            translate={translate}\r\n            lang={lang}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    _setCheckoutAddress :item => dispatch(setCheckoutAddress(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Address);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,TouchableOpacity} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setPayment} from '../../../../stores'\r\n\r\nlet PaymentsInfo =  (props) => {\r\n  let theme = useTheme();\r\n\r\n\r\n  let [paymentPath,setPaymentPath] = React.useState(0)\r\n    let ListItem = ({image,title,status,index}) => (\r\n      <TouchableOpacity onPress={() => {\r\n        setPaymentPath(index);\r\n        props.setPayment(title)\r\n        }} style={{ flexDirection: \"row\", alignItems: \"center\",borderBottomColor:'#7e7e7e',borderBottomWidth:0.5,paddingBottom:15,marginTop:15 }}>\r\n        <View>\r\n          <Image source={image} style={{width:50,height:50}} resizeMode=\"contain\" />\r\n        </View>\r\n        <View style={{ width: 15 }}></View>\r\n        <View>\r\n          <Text category=\"h5\" style={{color:status== 'success'? theme['text-success-color']:theme['text-hint-color']}}>{title}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n    return (\r\n      <View style={{ marginTop: 15, padding: 15 }}>\r\n        <Text category=\"h5\" style={{textAlign:'left'}}>\r\n          {props.translate(\"checkout.payment.payment_info.title\", props.lang)}\r\n        </Text>\r\n        <View style={{ height: 15 }}></View>\r\n        <ListItem\r\n          status={paymentPath == 0 ? \"success\" : \"basic\"}\r\n          image={require(\"../../../../assets/Stander/cashondelivery.png\")}\r\n          title={props.translate(\r\n            \"checkout.payment.payment_info.cash_on_deliver\",\r\n            props.lang\r\n          )}\r\n          index={0}\r\n        />\r\n        <ListItem\r\n          index={1}\r\n          status={paymentPath == 1 ? \"success\" : \"basic\"}\r\n          image={require(\"../../../../assets/Stander/online.png\")}\r\n          title={props.translate(\r\n            \"checkout.payment.payment_info.online_payment\",\r\n            props.lang\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setPayment: (item) => dispatch(setPayment(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsInfo);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {CheckBox,Text,useTheme,Datepicker} from '@ui-kitten/components'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {setTime} from '../../../../stores'\r\n\r\nlet DeliverTime = ({ delivery_times,_setTime,title,time,date_lang }) => {\r\n  const [date, setDate] = React.useState(new Date());\r\n    let [selectedTime,setSelectedTime] = React.useState(0);\r\n    let theme = useTheme()\r\n    React.useEffect(() => {\r\n      if(delivery_times.length >= 1) {\r\n        _setTime(delivery_times[0].time)\r\n      }\r\n    },[])\r\n\r\n\r\n    let ListItem = ({item,index}) => (\r\n      <TouchableOpacity onPress={() => {\r\n        setSelectedTime(index);\r\n        _setTime(item.time)\r\n        }} style={{ padding: 15, flexDirection: \"row\" }}>\r\n        <CheckBox\r\n        status=\"success\"\r\n          checked={index == selectedTime ? true:false}\r\n        >\r\n        </CheckBox>\r\n        <View style={{width:20}}></View>\r\n      <Text category=\"h6\">{item.time}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  return (\r\n    <View style={{ marginTop: 15,padding:10 }}>\r\n      <Text category=\"h5\" style={{textAlign:'left',marginBottom:10}}>{title}</Text>\r\n      <Datepicker\r\n            label={date_lang}\r\n            date={date}\r\n            onSelect={(nextDate) => setDate(nextDate)}\r\n          />\r\n  <Text category=\"s2\" style={{color:theme['text-hint-color'],marginTop:10,textAlign:'left'}}>{time}</Text>\r\n      {delivery_times.map((trg,index) => (\r\n          <ListItem key={index} index={index} item={trg} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    _setTime: (item) => dispatch(setTime(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliverTime);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView,KeyboardAvoidingView,Platform} from 'react-native'\r\nimport {Layout,Button,Input,Text} from '@ui-kitten/components'\r\n\r\nimport {Header,PaymentInfo,DeliveryTime,Dates} from './Components' \r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {setNote,setOrders,setEndCheckout} from '../../../stores'\r\nimport {apis} from '../../../services'\r\nimport {Loader} from '../../../components'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nlet Payment = (props) => {\r\n\r\n  let {address,payment,items,time,note} = props.checkout\r\n  let { delivery_times } = props.settings;\r\n  let {user,orders} = props.user;\r\n  \r\n\r\n  let {lang,rtl} = props.settings.locale\r\n\r\n  let [load,setLoad] = React.useState(false)\r\n\r\n  let [_note,_setNote] = React.useState('')\r\n\r\n  let _total = () => {\r\n    let _total = 0\r\n    items.map((trg,index) => {\r\n      let _item_fear = trg.price * trg.qty;\r\n      _total = _total + _item_fear;\r\n    })\r\n    return _total;\r\n  }\r\n\r\n  let store = () => {\r\n    setLoad(true)\r\n    let _order = {\r\n      user_id: user.id,\r\n      addresses_id: address,\r\n      payment:payment,\r\n      total:_total(),\r\n      time:time,\r\n      note:note\r\n    };\r\n    let _items = items;\r\n\r\n    let _data = {\r\n      order:_order,\r\n      orders_items:_items\r\n    };\r\n\r\n\r\n   \r\n\r\n    // Store Order\r\n    apis.order.store(_data,(res) => {\r\n      let _orders_locale = [];\r\n      _orders_locale.push(res);\r\n      orders.forEach((trg,index) => {\r\n        _orders_locale.push(trg);\r\n      });\r\n      setOrders(_orders_locale);\r\n      setLoad(false)\r\n      props.setEndCheckout();\r\n      props.navigation.navigate(\"Done\");\r\n    },(err) => {\r\n      setLoad(false)\r\n      console.log(err.response)\r\n    })\r\n    \r\n\r\n  }\r\n\r\n  let changeNote = (value) => {\r\n    _setNote(value)\r\n    props.setNote(value);\r\n  }\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <KeyboardAvoidingView\r\n          style={{ flex: 1 }}\r\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n        >\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <Header\r\n              navigation={props.navigation}\r\n              title={translate(\"checkout.payment.header\", lang)}\r\n            />\r\n            <PaymentInfo translate={translate} lang={lang} />\r\n            <DeliveryTime\r\n              delivery_times={delivery_times}\r\n              time={translate('checkout.payment.time',lang)}\r\n              date_lang={translate('checkout.payment.date',lang)}\r\n              title={translate(\"checkout.payment.delivery_time\", lang)}\r\n            />\r\n            <View style={{ padding: 10 }}>\r\n              <Text category=\"h5\" style={{textAlign:'left'}}>\r\n                {translate(\"checkout.payment.note\", lang)}\r\n              </Text>\r\n              <Input\r\n                multiline={true}\r\n                value={_note}\r\n                textStyle={{ minHeight: 64 }}\r\n                placeholder=\"Note\"\r\n                onChangeText={(value) => {\r\n                  changeNote(value);\r\n                }}\r\n              />\r\n            </View>\r\n            <View style={{padding:15}}>\r\n              <Text category=\"s1\">Well Add {_total()} Point to your Account</Text>\r\n            </View>\r\n            <View style={{ height: 100 }}></View>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n        \r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            bottom: 0,\r\n            paddingBottom: 10,\r\n            width: \"100%\",\r\n            backgroundColor: \"white\",\r\n          }}\r\n        >\r\n          <Button\r\n            status=\"success\"\r\n            onPress={() => {\r\n              store();\r\n            }}\r\n          >\r\n            {translate(\"checkout.payment.done\", lang)}\r\n          </Button>\r\n        </View>\r\n        {load && <Loader />}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    checkout:state.checkout,\r\n    settings:state.settings,\r\n    user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNote: (item) => dispatch(setNote(item)),\r\n    setOrders: (item) => dispatch(setOrders(item)),\r\n    setEndCheckout: () => dispatch(setEndCheckout()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Payment);","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated,Platform } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default () => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 200, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation,backgroundColor:Platform.OS == 'web' ?'#2e86':'transparent' }}>\r\n        <Svg height={200} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"60%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"80%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width - 170} ry={200} cx={180} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <View style={{ paddingVertical: 40, width: \"100%\" }}>\r\n            <Text category=\"h1\" style={{ color: \"white\", textAlign: \"center\" }}>\r\n              Order\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Layout,Text,Button} from '@ui-kitten/components'\r\n\r\nimport {Header} from './Components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {translate} from '../../../translations'\r\n\r\nlet Done =  (props) => {\r\n\r\n  let {lang,rtl} = props.locale\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header\r\n          navigation={props.navigation}\r\n          title={translate(\"checkout.done.header\", lang)}\r\n        />\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: 15,\r\n          }}\r\n        >\r\n          <View>\r\n            <Text category=\"h5\" style={{ textAlign: \"center\" }}>\r\n              You Have put Order\r\n            </Text>\r\n            <Text style={{ marginTop: 15, textAlign: \"center\" }} category=\"s1\">\r\n              {translate(\"checkout.done.success_message\", lang)}\r\n            </Text>\r\n          </View>\r\n          {/* <Button\r\n            status=\"basic\"\r\n            style={{\r\n              backgroundColor: \"black\",\r\n              marginTop: 15,\r\n              borderRadius: 10,\r\n            }}\r\n            size=\"giant\"\r\n          >\r\n            {(evaProps) => (\r\n              <Text {...evaProps} style={{ color: \"white\" }}>\r\n                BACK TO HOME\r\n              </Text>\r\n            )}\r\n          </Button> */}\r\n        </View>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale: state.settings.locale,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Done);","import React from \"react\";\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\n\r\nimport {Basket,Address,Payment,Done} from '../containers/Checkout'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport { Animations } from \"../constants\";\r\n\r\n/** Render() */\r\nexport default function MainNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"Basket\"}\r\n    >\r\n      <Stack.Screen name=\"Basket\" component={Basket} />\r\n      <Stack.Screen name=\"Address\" component={Address} />\r\n      <Stack.Screen name=\"Payment\" component={Payment} />\r\n      <Stack.Screen name=\"Done\" component={Done} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\n\r\n\r\nimport {SettingsMain,MyOrders,OrderDetails,Addresses,Favourite,Language} from '../containers/Settings'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport { Animations } from \"../constants\";\r\n\r\n/** Render() */\r\nexport default function MainNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"SettingsMain\"}\r\n    >\r\n      <Stack.Screen name=\"SettingsMain\" component={SettingsMain} />\r\n      <Stack.Screen name=\"MyOrders\" component={MyOrders} />\r\n      <Stack.Screen name=\"OrderDetails\" component={OrderDetails} />\r\n      <Stack.Screen name=\"Addresses\" component={Addresses} />\r\n      <Stack.Screen name=\"Favourite\" component={Favourite} />\r\n      <Stack.Screen name=\"Language\" component={Language} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { useTheme } from \"@ui-kitten/components\";\r\n\r\nimport MainNavigation from './MainNavigation'\r\nimport Categories from '../containers/Categories'\r\nimport CheckoutNavigation from './CheckoutNavigation'\r\nimport SettingsNavigation from './SettingsNavigation'\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function BottomTapNavigation(props) {\r\n  let theme = useTheme();\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === \"MainNavigation\") {\r\n            iconName = focused ? \"home\" : \"home\";\r\n          } else if (route.name === \"Categories\") {\r\n            iconName = focused ? \"book-open\" : \"book\";\r\n          } else if (route.name === \"CheckoutNavigation\") {\r\n            iconName = focused ? \"shopping-bag\" : \"shopping-bag\";\r\n          } else if (route.name === \"SettingsNavigation\") {\r\n            iconName = focused ? \"settings\" : \"settings\";\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return (\r\n            <View\r\n              style={{\r\n                borderBottomColor: color,\r\n                borderBottomWidth: focused ? 2 : 0,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Feather name={iconName} size={size} color={color} />\r\n            </View>\r\n          );\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: \"#f44336\",\r\n        inactiveTintColor: \"gray\",\r\n        showLabel: false,\r\n      }}\r\n      initialRouteName={\"MainNavigation\"}\r\n    >\r\n      <Tab.Screen name=\"MainNavigation\" component={MainNavigation} />\r\n      <Tab.Screen name=\"Categories\" component={Categories} />\r\n      <Tab.Screen name=\"CheckoutNavigation\" component={CheckoutNavigation} />\r\n      <Tab.Screen name=\"SettingsNavigation\" component={SettingsNavigation} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport { View, ImageBackground,Image } from \"react-native\";\r\nimport {Layout,Text,Spinner} from '@ui-kitten/components'\r\nimport {connect} from 'react-redux'\r\nimport {setCategories,setItemsList,setTopItemsList,setDeliveryTimes,setUser,setAddresses,setOrders,setFavourite, setLocale,setOffers,setNewItems} from '../../stores'\r\nimport {apis,LocaleLoader} from '../../services'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n\r\nlet Loading = (props) => {\r\n      let checkLang = async () => {\r\n         await LocaleLoader();\r\n\r\n        let _locale = await AsyncStorage.getItem(\"@blueberry_locale\");\r\n        if (_locale == \"en\") {\r\n          props.setLocale({\r\n            lang: \"en\",\r\n            rtl: false,\r\n          });\r\n        } else if (_locale == \"ar\") {\r\n          props.setLocale({\r\n            lang: \"ar\",\r\n            rtl: true,\r\n          });\r\n        }\r\n      };\r\n\r\n    let InstallAssets = async() => {\r\n        await checkLang();\r\n\r\n        // Call Http\r\n        apis.main.index((res) => {\r\n            let _categories = res.data.categories;\r\n            let _items = res.data.items;\r\n            let _topItems = res.data.top_items;\r\n            let _deliverTime = res.data.deliverTime;\r\n\r\n            let _offers = res.data.offers_items\r\n            let _new_items = res.data.new_items\r\n            // _items.forEach((trg,index) => {\r\n            //   if(trg.discount !== 0.00) {\r\n            //     _offers.push(trg);\r\n            //   }\r\n            // });\r\n            \r\n            \r\n\r\n            // Register To Store Global\r\n            props.setCategories(_categories);\r\n            props.setItemsList(_items);\r\n            props.setTopItemsList(_topItems)\r\n            props.setDeliveryTimes(_deliverTime)\r\n            props.setOffers(_offers)\r\n            props.setNewItems(_new_items)\r\n            CheckUser();\r\n\r\n        },(err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n\r\n  \r\n\r\n\r\n    let checkFavourite = async() => {\r\n        try {\r\n            let _favouriteList = await AsyncStorage.getItem(\"@blueberry_favourite\");\r\n            if(_favouriteList) {\r\n                props.setFavourite(JSON.parse(_favouriteList));\r\n                props.navigation.navigate(\"BottomNavigation\");\r\n            }else {\r\n                props.navigation.navigate(\"BottomNavigation\");\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n                props.navigation.navigate(\"BottomNavigation\");\r\n\r\n        }\r\n    }\r\n\r\n    let CheckUser = async() => {\r\n\r\n        let callHttpAuth = (token) => {\r\n             let _tok = \"Bearer \" + token;\r\n             apis.user.auth(_tok,(res => {\r\n                // User Details\r\n                props.setUser(res);\r\n                props.setAddresses(res.addresses);\r\n                props.setOrders(res.orders);\r\n\r\n                 checkFavourite();\r\n\r\n             }),err=> {\r\n                 checkFavourite();\r\n                })\r\n        }   \r\n\r\n        try {\r\n            let token = await AsyncStorage.getItem('@blueberry_client_token');\r\n            if(!token) {\r\n                checkFavourite();\r\n            }else {\r\n                // Call User Auth Api\r\n                callHttpAuth(token)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Install Assets\r\n\r\n        InstallAssets();\r\n    },[]);\r\n\r\n    return (\r\n        <Layout style={{flex:1}}>\r\n            <ImageBackground source={require('../../assets/Stander/xs2.jpg')} style={{flex:1,justifyContent:'center',alignItems:'center'}} resizeMode=\"cover\">\r\n                {/* <Text category=\"h3\" style={{textAlign:'center'}}>BlueBerry Jo</Text> */}\r\n                <Image source={require('../../assets/logo.png')} style={{width:100,height:100}} resizeMode=\"contain\" />\r\n                <Spinner status=\"basic\" />\r\n            </ImageBackground>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCategories: (item) => dispatch(setCategories(item)),\r\n    setItemsList: (item) => dispatch(setItemsList(item)),\r\n    setTopItemsList: (item) => dispatch(setTopItemsList(item)),\r\n    setDeliveryTimes: (item) => dispatch(setDeliveryTimes(item)),\r\n    setUser: (item) => dispatch(setUser(item)),\r\n    setAddresses: (item) => dispatch(setAddresses(item)),\r\n    setOrders: (item) => dispatch(setOrders(item)),\r\n    setFavourite: (item) => dispatch(setFavourite(item)),\r\n    setOffers: (item) => dispatch(setOffers(item)),\r\n    setLocale: (item) => {\r\n      dispatch(setLocale(item));\r\n    },\r\n    setNewItems:(item) => dispatch(setNewItems(item))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);","import ItemsType from './ItemsType'\r\n\r\n\r\nexport const setItemsList = (item) => {\r\n  return {\r\n    type: ItemsType.SET_ITEMS_LIST,\r\n    payload: item,\r\n  };\r\n};\r\n\r\n\r\nexport const setTopItemsList = (item) => {\r\n  return {\r\n    type:ItemsType.SET_TOP_ITEMS_LIST,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setOffers = (item) => {\r\n  return {\r\n    type:ItemsType.SET_OFFERS,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setNewItems = (item) => {\r\n  return {\r\n    type:ItemsType.SET_NEW_ITEMS,\r\n    payload:item\r\n  }\r\n}","import SettingsType from './SettingsType'\r\n\r\nexport const setDeliveryTimes = item => {\r\n    return {\r\n        type:SettingsType.SET_DELIVERY_TIMES,\r\n        payload:item\r\n    }\r\n}\r\n\r\nexport const setLocale = item => {\r\n    return {\r\n        type:SettingsType.SET_LOCALE,\r\n        payload:item\r\n    }\r\n}","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, StyleSheet, Dimensions, Animated } from \"react-native\";\r\nimport { Layout, Text, Input } from \"@ui-kitten/components\";\r\nimport Svg, {\r\n  Image,\r\n  ClipPath,\r\n  Circle,\r\n  LinearGradient,\r\n  Stop,\r\n  Ellipse,\r\n  Defs,\r\n} from \"react-native-svg\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nexport default ({ navigation,title }) => {\r\n  let size = Dimensions.get(\"window\");\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let heightAnimation = React.useRef(new Animated.Value(0)).current;\r\n\r\n  let InstallAnimation = () => {\r\n    Animated.timing(heightAnimation, {\r\n      toValue: 1,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    InstallAnimation(); // install Animation\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ height: 220, width: size.width }}>\r\n      <Animated.View style={{ ...styles.container, opacity: heightAnimation }}>\r\n        <Svg height={220} width={size.width}>\r\n          <Defs>\r\n            <LinearGradient id=\"grad\" x2=\"0%\" y2=\"100%\">\r\n              <Stop offset=\"20%\" stopColor=\"#9000d8\" stopOpacity=\"1\" />\r\n              <Stop offset=\"40%\" stopColor=\"#503069\" stopOpacity=\"1\" />\r\n              <Stop offset=\"50%\" stopColor=\"#2e86\" stopOpacity=\"1\" />\r\n              <Stop offset=\"100%\" stopColor=\"#006a4e\" stopOpacity=\"1\" />\r\n            </LinearGradient>\r\n          </Defs>\r\n          <Ellipse rx={size.width} ry={220} cx={70} fill=\"url(#grad)\" />\r\n        </Svg>\r\n        <View style={styles.card}>\r\n          <Entypo\r\n            onPress={() => {\r\n              navigation.goBack();\r\n            }}\r\n            name=\"arrow-long-left\"\r\n            size={32}\r\n            color=\"white\"\r\n          />\r\n          <View style={{ paddingVertical: 20, width: \"80%\" }}>\r\n            <Text category=\"h3\" style={{ color: \"white\" }}>\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"relative\",\r\n  },\r\n  card: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    padding: 10,\r\n    paddingVertical: 30,\r\n  },\r\n});\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,Image,KeyboardAvoidingView,Platform,TouchableOpacity} from 'react-native'\r\nimport {Button,Text,Input,useTheme} from '@ui-kitten/components'\r\n\r\nimport {apis} from '../../../services'\r\nimport {Loader} from '../../../components'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {setUser,setAddresses,setOrders} from '../../../stores'\r\nimport {translate} from '../../../translations'\r\nimport {connect} from 'react-redux'\r\nlet Login = (props) => {\r\n    let [data,setData] = React.useState({\r\n        phone:'',\r\n        password:''\r\n    });\r\n\r\n    let theme = useTheme();\r\n\r\n    let {lang,rtl} = props.locale\r\n\r\n    let [load,setLoad] = React.useState(false)\r\n\r\n\r\n    let login = () => {\r\n      setLoad(true)\r\n        // Call Login \r\n        apis.user.login(data,async(res) => {\r\n            props.setUser(res.user)\r\n            props.setAddresses(res.user.addresses)\r\n            props.setOrders(res.user.orders);\r\n            try {\r\n                await AsyncStorage.setItem(\"@blueberry_client_token\",res.token);\r\n            } catch (error) {\r\n                console.log(error)\r\n                setLoad(false);\r\n            }\r\n            setLoad(false)\r\n            props.loginSuccess();\r\n        },err => {\r\n            console.log(err)\r\n            setLoad(false);\r\n            props.loginFailed();\r\n        })\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS == \"ios\" ? \"height\" : \"height\"}\r\n        style={{\r\n          padding: 15,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Image\r\n          source={require(\"../../../assets/Stander/avatar.png\")}\r\n          style={{ width: 120, height: 120 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <View id=\"InputGroup\" style={{ marginTop: 25, width: \"80%\" }}>\r\n          <Input\r\n            style={{ borderRadius: 25 }}\r\n            placeholder={translate('auth.phone',lang)}\r\n            keyboardType=\"number-pad\"\r\n            value={data.phone}\r\n            onChangeText={(val) => setData({ ...data, phone: val })}\r\n          />\r\n        </View>\r\n        <View id=\"InputGroup\" style={{ marginTop: 15, width: \"80%\" }}>\r\n          <Input\r\n            style={{ borderRadius: 25 }}\r\n            placeholder={translate('auth.password',lang)}\r\n            value={data.password}\r\n            secureTextEntry={true}\r\n            onChangeText={(val) => setData({ ...data, password: val })}\r\n          />\r\n        </View>\r\n        <View style={{ marginTop: 20, width: \"80%\" }}>\r\n          <Button\r\n            status=\"success\"\r\n            style={{ borderRadius: 25 }}\r\n            size=\"large\"\r\n            onPress={() => {\r\n              login();\r\n            }}\r\n          >\r\n            {translate('auth.login',lang)}\r\n          </Button>\r\n        </View>\r\n        <View style={{ marginTop: 30 }}>\r\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n            <Text category={\"s1\"}>{translate('auth.you_dont_have',lang)}</Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                props.changeScreen(\"Register\");\r\n              }}\r\n              style={{ marginHorizontal: 10 }}\r\n            >\r\n              <Text\r\n                category=\"h6\"\r\n                style={{ color: theme[\"text-success-color\"] }}\r\n              >\r\n                {translate('auth.register',lang)}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        {load && <Loader />}\r\n      </KeyboardAvoidingView>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(setUser(item)),\r\n    setAddresses: (item) => dispatch(setAddresses(item)),\r\n    setOrders: (item) => dispatch(setOrders(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from \"react\";\r\n\r\n/** Components */\r\nimport {\r\n  View,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Button, Text, Input, useTheme } from \"@ui-kitten/components\";\r\n\r\nimport { apis } from \"../../../services\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { setUser,setAddresses,setOrders } from \"../../../stores\";\r\nimport { connect } from \"react-redux\";\r\nimport {Loader} from '../../../components'\r\nimport {translate} from '../../../translations'\r\nlet Login = (props) => {\r\n  let [data, setData] = React.useState({\r\n    phone: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    role_id:1\r\n  });\r\n\r\n  let {lang,rtl} = props.locale \r\n\r\n  let theme = useTheme();\r\n  let [load,setLoad] = React.useState(false);\r\n  let login = () => {\r\n    // Call Login\r\n    setLoad(true)\r\n\r\n    apis.user.register(\r\n      data,\r\n      async (res) => {\r\n        props.setUser(res.user);\r\n        props.setAddresses(res.user.addresses);\r\n        props.setOrders(res.user.orders);\r\n        try {\r\n          await AsyncStorage.setItem(\"@blueberry_client_token\", res.token);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        setLoad(false)\r\n        props.registerSuccess();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        props.registerFailed();\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS == \"ios\" ? \"height\" : \"height\"}\r\n      style={{\r\n        padding: 15,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"../../../assets/Stander/avatar.png\")}\r\n        style={{ width: 120, height: 120 }}\r\n        resizeMode=\"contain\"\r\n      />\r\n      <View id=\"InputGroup\" style={{ marginTop: 10, width: \"80%\" }}>\r\n        <Input\r\n          style={{ borderRadius: 25 }}\r\n          placeholder={translate('auth.name',lang)}\r\n          value={data.name}\r\n          onChangeText={(val) => setData({ ...data, name: val })}\r\n        />\r\n      </View>\r\n      <View id=\"InputGroup\" style={{ marginTop: 10, width: \"80%\" }}>\r\n        <Input\r\n          style={{ borderRadius: 25 }}\r\n          placeholder={translate('auth.phone',lang)}\r\n          keyboardType=\"number-pad\"\r\n          value={data.phone}\r\n          onChangeText={(val) => setData({ ...data, phone: val })}\r\n        />\r\n      </View>\r\n      <View id=\"InputGroup\" style={{ marginTop: 10, width: \"80%\" }}>\r\n        <Input\r\n          style={{ borderRadius: 25 }}\r\n          placeholder={translate('auth.password',lang)}\r\n          value={data.password}\r\n          secureTextEntry={true}\r\n          onChangeText={(val) => setData({ ...data, password: val })}\r\n        />\r\n      </View>\r\n      <View style={{ marginTop: 20, width: \"80%\" }}>\r\n        <Button\r\n          status=\"success\"\r\n          style={{ borderRadius: 25 }}\r\n          size=\"large\"\r\n          onPress={() => {\r\n            login();\r\n          }}\r\n        >\r\n          {translate('auth.register',lang)}\r\n        </Button>\r\n      </View>\r\n      <View style={{ marginTop: 30 }}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <Text category={\"s1\"}>{translate('auth.do_you_have',lang)}</Text>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              props.changeScreen(\"Login\");\r\n            }}\r\n            style={{ marginHorizontal: 10 }}\r\n          >\r\n            <Text category=\"h6\" style={{ color: theme[\"text-success-color\"] }}>\r\n            {translate('auth.login',lang)}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      {load &&\r\n        <Loader />\r\n      }\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(setUser(item)),\r\n    setAddresses: (item) => dispatch(setAddresses(item)),\r\n    setOrders: (item) => dispatch(setOrders(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react'\r\n\r\n/** Components */\r\nimport {View,ScrollView} from 'react-native'\r\nimport {Layout,Text} from '@ui-kitten/components'\r\n\r\nimport {Header,Login,Register} from './Components'\r\n\r\nimport {Snake} from '../../components'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {translate} from '../../translations'\r\n\r\nlet Auth = (props) => {\r\n    let [screen,setScreen] = React.useState('Login');\r\n\r\n    let {lang,rtl} = props.locale\r\n\r\n    let [snakeOptions,setSnakeOptions] = React.useState({\r\n        show:false,\r\n        status:'success',\r\n        title:''\r\n    });\r\n\r\n    let loginSuccess = () => {\r\n      setSnakeOptions({\r\n        status: \"success\",\r\n        title: translate('auth.login_success',lang),\r\n        show: true,\r\n      });\r\n      setTimeout(() => {\r\n        setSnakeOptions({\r\n          status: \"success\",\r\n          title: \"\",\r\n          show: false,\r\n        });\r\n        props.navigation.goBack();\r\n      }, 1500);\r\n    }\r\n\r\n    let loginFailed = () => {\r\n      setSnakeOptions({\r\n        status: \"danger\",\r\n        title: translate('auth.login_faild',lang),\r\n        show: true,\r\n      });\r\n      setTimeout(() => {\r\n        setSnakeOptions({\r\n          status: \"success\",\r\n          title: \"\",\r\n          show: false,\r\n        });\r\n      }, 1500);\r\n    };\r\n\r\n    let registerSuccess = () => {\r\n      setSnakeOptions({\r\n        status: \"success\",\r\n        title: translate('auth.register_success',lang),\r\n        show: true,\r\n      });\r\n      setTimeout(() => {\r\n        setSnakeOptions({\r\n          status: \"success\",\r\n          title: \"\",\r\n          show: false,\r\n        });\r\n        props.navigation.goBack();\r\n      }, 1500);\r\n    };\r\n\r\n    let registerFailed = () => {\r\n        setSnakeOptions({\r\n          status: \"danger\",\r\n          title: translate('auth.register_failed',lang),\r\n          show: true,\r\n        });\r\n        setTimeout(() => {\r\n          setSnakeOptions({\r\n            status: \"success\",\r\n            title: \"\",\r\n            show: false,\r\n          });\r\n        }, 1500);\r\n    }\r\n\r\n    let changeScreen = (s) => {\r\n        setScreen(s);\r\n    }\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <Header navigation={props.navigation} title={screen} />\r\n          {screen == \"Login\" && (\r\n            <Login\r\n              loginSuccess={loginSuccess}\r\n              loginFailed={loginFailed}\r\n              changeScreen={changeScreen}\r\n            />\r\n          )}\r\n          {screen == \"Register\" && (\r\n            <Register\r\n              registerSuccess={registerSuccess}\r\n              registerFailed={registerFailed}\r\n              changeScreen={changeScreen}\r\n            />\r\n          )}\r\n        </ScrollView>\r\n        {snakeOptions.show && (\r\n          <Snake status={snakeOptions.status} title={snakeOptions.title} />\r\n        )}\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locale:state.settings.locale\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","/**\r\n * Router.js\r\n * Make By Ahmed Altommy\r\n * #Main Navigation Handler.\r\n */\r\n\r\nimport React from 'react';\r\n\r\n/** --------- Navigation ---------- */\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {createStackNavigator,CardStyleInterpolators} from \"@react-navigation/stack\";\r\n\r\n// ----------- Constants ----------// \r\nimport {Animations} from './constants'\r\n\r\n// Navigation Screens\r\nimport BottomNavigation from './navigation/BottomTapNavigation'\r\nimport Loading from './containers/Loading'\r\nimport Auth from './containers/Auth'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          screenOptions={Animations.screenOptionsHome}\r\n          initialRouteName={\"Loading\"}\r\n          headerMode=\"float\"\r\n          animation=\"fade\"\r\n        >\r\n          <Stack.Screen name=\"Loading\" component={Loading} />\r\n          <Stack.Screen name=\"BottomNavigation\" component={BottomNavigation} />\r\n          <Stack.Screen name=\"Auth\" component={Auth} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n}","/**\r\n * Root.js\r\n * Make By Ahmed Altommy\r\n * #Main App Bootstrap.\r\n */\r\n\r\n import React from 'react';\r\n\r\n /** ------------- Components --------------- */\r\n import {Platform,StatusBar,StyleSheet,Easing} from 'react-native';\r\n import * as SplashScreen from \"expo-splash-screen\";\r\n import { Ionicons } from \"@expo/vector-icons\";\r\n import * as Font from \"expo-font\";\r\n\r\n /** ------------- UI-Kitten Display --------------- */\r\n import * as eva from \"@eva-design/eva\"; //Design System\r\n import { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\"; // UI Application Provider\r\n import { EvaIconsPack } from \"@ui-kitten/eva-icons\"; // Icons Pack\r\n\r\n/** ------------- Stores ---------------*/\r\nimport { Provider } from \"react-redux\";\r\nimport store from './stores/store'\r\n\r\n/** ------------- Services ------------- */\r\nimport {FontsLoader,LocaleLoader} from './services'\r\n\r\n/** ------------- Router --------------- */\r\nimport Router from './Router';\r\n\r\n/** ------------- Export -------------- */\r\nexport default function App(props) {\r\n    // Constants\r\n    const [isLoadingComplete,setLoadingComplete] = React.useState(false); // Async Loading\r\n\r\n    // Install\r\n    let install = async() => {\r\n        try {\r\n          // Splash Screen\r\n          await SplashScreen.preventAutoHideAsync();\r\n\r\n          // Load Fonts\r\n          await FontsLoader();\r\n\r\n          // Locale Loader\r\n          await LocaleLoader();\r\n\r\n          // End\r\n        } catch (error) {\r\n            // On Error\r\n          console.log(error);\r\n        } finally {\r\n            // When Complete\r\n            setTimeout(async() => {\r\n          setLoadingComplete(true);\r\n          await SplashScreen.hideAsync();\r\n\r\n            },1000)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Call Install Function \r\n        install();\r\n    },[]);\r\n\r\n\r\n    // --------------- Return -------------- //\r\n\r\n    if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n      return null;\r\n    }else {\r\n        return (\r\n          <Provider store={store} style={styles.container}>\r\n            <IconRegistry icons={EvaIconsPack} />\r\n            <ApplicationProvider {...eva} theme={{ ...eva.light}}>\r\n              {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\r\n              <Router />\r\n            </ApplicationProvider>\r\n          </Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// ---------- Styles --------- //\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#fff\",\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport Root from \"./src/Root\";\r\n\r\nexport default () => {\r\n  return <Root />;\r\n};\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/tomat.abcaccc1.png\";","module.exports = __webpack_public_path__ + \"static/media/leef.3d5a30a5.png\";","module.exports = __webpack_public_path__ + \"static/media/sh.ac117113.png\";","module.exports = __webpack_public_path__ + \"static/media/basket-min.78fa3edf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cashondelivery.ff667961.png\";","module.exports = __webpack_public_path__ + \"static/media/online.e151dcdf.png\";","module.exports = __webpack_public_path__ + \"static/media/xs2.772a0135.jpg\";"],"sourceRoot":""}